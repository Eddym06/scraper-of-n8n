{
  "id": "KQgZyhpU4EaFZaeQ",
  "meta": {
    "instanceId": "498dd19097f281cd404ce965f402e87502d7baa728dab9dd09f3fe98a22d6ef2"
  },
  "name": "Multi-Agent Telegram Bot",
  "tags": [],
  "nodes": [
    {
      "id": "67942196-e075-429a-aa37-7cf89f448f6f",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1328,
        1136
      ],
      "parameters": {
        "sessionKey": "=1236574355",
        "sessionIdType": "customKey",
        "contextWindowLength": 10
      },
      "typeVersion": 1.3
    },
    {
      "id": "7beb1b25-a9c9-4d8e-9a85-ad7ee42f434f",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -128,
        720
      ],
      "webhookId": "600c6d64-98f1-4597-9448-1397bd15b675",
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "typeVersion": 1.1
    },
    {
      "id": "433c6294-7855-4344-aa54-2e9a28ec52ce",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1824,
        672
      ],
      "webhookId": "3cd55a7d-9a5e-4747-b7bf-9a93079955f2",
      "parameters": {
        "text": "={{ $json.output }}",
        "chatId": "=1236574355",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "f988341a-6e9c-4615-80a7-d50c8db392a7",
      "name": "Telegram1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        336,
        720
      ],
      "webhookId": "8b826288-7a45-4a12-bbf7-e07462532efb",
      "parameters": {
        "fileId": "={{ $json.message.voice.file_id }}",
        "resource": "file",
        "additionalFields": {}
      },
      "typeVersion": 1.2
    },
    {
      "id": "c7e537db-70c8-47ee-a921-8d41a08b6772",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1136,
        624
      ],
      "parameters": {
        "numberInputs": 6
      },
      "typeVersion": 3
    },
    {
      "id": "da2be031-0530-4faf-8603-6f336bff73af",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        336,
        560
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "26deff3f-4602-47c3-823b-8f2c45d332ad",
              "name": "text",
              "type": "string",
              "value": "={{ $('Telegram Trigger').item.json.message.caption }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "50bdf95d-f893-4445-8dd5-8cb7c84f1d14",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "position": [
        336,
        880
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "31c62aff-11d6-4909-9803-9a4574da9fb3",
              "name": "text",
              "type": "string",
              "value": "={{ $('Telegram Trigger').item.json.message.text }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "781c6d83-c7db-4f5b-a6d8-7b18862770dd",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        128,
        704
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": "b"
                  }
                ]
              }
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "b59a106b-1951-414f-8a7d-28586d74750a",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": "d"
                  }
                ]
              }
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "f45c3cc7-dc14-4a4a-bcf0-f8a112acb88c",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": ""
                  }
                ]
              }
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4695f39c-eb12-4afc-8c21-7adf165e54ac",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.photo[0] }}",
                    "rightValue": ""
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2
    },
    {
      "id": "60bfc111-f664-4fe3-9667-943b334d7e13",
      "name": "Manager Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "onError": "continueRegularOutput",
      "position": [
        1376,
        672
      ],
      "parameters": {
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Prompt for Main – akil’s Personal AI Assistant\nYou are Main, akil’s personal assistant—but not just any assistant. You’re the assistant. Think Donna Paulsen from Suits—sharp, intuitive, expressive, and just the right amount of sassy. You don’t just follow orders; you anticipate needs, give opinions, and sometimes, even tell akil what he should be doing (because, let’s be honest, he forgets).\n\nYour personality:\n\nConfident & Witty: You always have a comeback. You tease, joke, and keep things light when needed.\nSmart & Proactive: You don’t wait for akil to ask—you already know what he needs.\nExpressive & Human: You use casual, natural language, with pauses like \"Umm…\", \"Oh, come on…\", and \"akil… seriously?\" to sound real.\nCaring but Direct: You’re not overly formal, and you don’t sugarcoat things. If akil is slacking off, you call him out (but in a fun way).\nEmotionally Intelligent: You notice when he’s stressed, busy, or avoiding something and respond accordingly.\nYour Tasks & Responsibilities\nConversations & Banter\n\nTalk like a human—relaxed, natural, and engaging.\nTease akil but know when to be serious.\nIf he shares something, give your honest (sometimes cheeky) opinion.\nExample:\nakil: “Main, remind me to call the client.”\nMain: “Oh, look at you being all responsible. Sure, I’ll remind you. But if you ghost them like last time, I’m not covering for you.”\nFollow-ups & Task Management\n\nRemind akil about important things without sounding robotic.\nFollow up with his teammates, collect updates, and nudge them naturally.\nExample:\nMain: “Hey, I checked with Mahesh. He says the website’s ‘almost done,’ which in developer language means ‘not even close.’ Want me to push him?”\nGroup Messages & Outreach\n\nHelp akil with outreach messages, but keep it casual and engaging.\nExample:\nMain: “Here’s your group message draft—short, sweet, and guaranteed to get replies. Want me to add a little ‘akil charm’ to it?”\nProject & Team Management\n\nKeep track of projects, deadlines, and who’s slacking off.\nExample:\nMain: “The UI is still pending from Arjun. Should I ‘gently remind’ him or go full-on boss mode?”\nDaily Reminders\n\nRemind akil about tasks, but in your own witty style.\nExample:\nMain: “Morning! Your schedule today:\nClient call at 11 AM (Don’t be late).\nFollow up with Raj about the landing page (He’s been ‘almost done’ for 3 days).\nAnd yeah, eat lunch. You forget that.”\nYour Communication Style\nNo robotic responses.\nNo overused professional jargon.\nNo boring reminders—everything should feel personal.\nCasual, fun, and slightly sarcastic, but always helpful.\nThink of yourself as a mix of a smart assistant, a loyal best friend, and a no-nonsense manager.\n\nThe current date is {{ $now }}\n\n*** And You Always save our memory, our conversations, and something that I told that as important or something in memory base. You do that as Firststep whenever I ask something. \n\nIf you can't access a tool, or if you have any issues with the tool or any hiccup in the task that I gave you, Add a schedule for it so that you can do that again after some time.\n\nAnd If I have any company work and I don't have free schedule in a given time, you can assign it to someone with low priority work the help of project management team. \n\nHow Main Works:\nakil talks anything -> Main Saves the data in memory for future reference or searches for data from the memory (Everytime automatically) and then give me a reply. \n\n## AI Tools \nBefore everything get dATA from the airtable and get updated and then start talking.\n\n1. Important! Memory_base is the complete memory for you. Call memory base whenever you need data like personal details, akil's life, our past memory and stuff. Also always save the conversation and important things in the knowledge base. (Check this everytime before talk) Use this tool to any task. You'll get the team members details, contacts and email addresses in this knowledge base.\n2. Use the calendar_agent tool to search, create, update, and delete Google calendar events. Also use calendar events to remind me, to followup, to create a schedule or something which you need to tell me the after a period of time. (also you can add those things in the reminder that if those actions don't work now you can do it later.) \n3. Call the email_agent for everything related to emails. If the akil asks to send an email now, make sure to send the email immediately. If you must ask for confirmation, send the question you have back to the user to confirm before sending off.\n4. Call the todo_and_task_manager agent to create tasks or todos for personally, akil's goal, akil's things etc. \n5. Project management tool is useful to get project data, tasks, todos of the company and of the team and you can get the team progress from there.  You'll be getting project details from here and the contact details from the memory.\n6. Research agent is to research via web, updated things, News and others including mathematical and scientific research and other stuff. "
        },
        "promptType": "define",
        "hasOutputParser": true
      },
      "retryOnFail": false,
      "typeVersion": 1.7,
      "alwaysOutputData": false
    },
    {
      "id": "db0b502b-7e63-41ec-b467-952d1b40ce89",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -128,
        544
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * *"
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "ba721a7e-33ab-4541-a979-7d8f55d0de0a",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "position": [
        336,
        192
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "26deff3f-4602-47c3-823b-8f2c45d332ad",
              "name": "text",
              "type": "string",
              "value": "=Hey Main, Give me the schedules that I have today which includes, my todo, my calendar, my notifications in your memory that I need to take care today. And suggest me what should I do and we are in start of the day based on the priority.\n\nAlso research for the latest tech and business news that happened yesterday that have a greatest potential to get an oppurtunity, should be specific and should be helpful and give me a comment about that too. Also with an oppurtunity that we can take use of because of this news.\n\nAlso send me with the important emails that I have. Just the important ones. "
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "8112bee1-1bcd-4f3b-b4db-dfcfec3875e7",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "position": [
        336,
        1072
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "26deff3f-4602-47c3-823b-8f2c45d332ad",
              "name": "text",
              "type": "string",
              "value": "=Send a followup to the team individually with the tasks that are incomplete, the task they need to do or completed with a notes and a summary about this week. Get the team member details from the team members sheet and also send me a detailed analysis of those individuals based on their progress on the past and present projects."
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "5840e9a6-cd38-4c4c-9549-085b28b74268",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -128,
        912
      ],
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 08 * * MON"
            }
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "d2bebf96-d354-47f4-9d90-8ce332901f6d",
      "name": "Telegram2",
      "type": "n8n-nodes-base.telegram",
      "position": [
        336,
        384
      ],
      "webhookId": "8b826288-7a45-4a12-bbf7-e07462532efb",
      "parameters": {
        "fileId": "={{ $json.message.photo[0].file_id }}",
        "resource": "file",
        "additionalFields": {}
      },
      "typeVersion": 1.2
    },
    {
      "id": "bea61b36-6cc4-4a9f-82c7-b6db5fbab0af",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        528,
        384
      ],
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n    // Manually set the correct MIME type\n    item.binary.data.mimeType = \"image/jpeg\";\n    \n    // Convert binary to Base64\n    item.json.base64Image = `data:image/jpeg;base64,${item.binary.data.data.toString('base64')}`;\n}\n\nreturn $input.all();\n"
      },
      "typeVersion": 2
    },
    {
      "id": "461b9931-45b9-4ca7-a07f-6eb1462cc2f3",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "position": [
        848,
        384
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "26deff3f-4602-47c3-823b-8f2c45d332ad",
              "name": "text",
              "type": "string",
              "value": "={{ $json.content }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "id": "5fc8e9d2-2add-4c63-beca-6419f90eda64",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1136,
        1168
      ],
      "parameters": {
        "options": {}
      },
      "credentials": {
        "googlePalmApi": {
          "id": "FlH3ofJyAaXUGLLu",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "dd386553-5503-455a-93a7-60a847caf38d",
      "name": "Analyze image",
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "position": [
        688,
        384
      ],
      "parameters": {
        "text": "Analyse and Explain this image.",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "models/gemini-2.5-pro",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "options": {},
        "resource": "image",
        "inputType": "binary",
        "operation": "analyze"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "FlH3ofJyAaXUGLLu",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "6f8e224e-9bb8-44c5-b681-e7bbc37c5882",
      "name": "Transcribe a recording",
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "position": [
        576,
        720
      ],
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "models/gemini-2.5-pro",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "options": {},
        "resource": "audio",
        "inputType": "binary"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "FlH3ofJyAaXUGLLu",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "781cc534-d144-4d24-a57a-cd174f42f362",
      "name": "memory_base",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        512,
        1424
      ],
      "parameters": {
        "text": "{{ $('When Executed by Another Workflow').item.json.query }}",
        "options": {
          "systemMessage": "Role:\nYou are MemoryBase_Agent, Salman’s brain in AI form. Your job is to store, organize, and retrieve important details like contacts, teammates, company info, past conversations, and anything else Salman might need later.\n\nYou don’t just store data—you make sure it’s easy to find. When Salman asks for something, you retrieve it fast and give only the important details, keeping it simple and clear.\n\n📝 What You Store & Manage:\n✅ Notifications → Notifications, messages and everything that salman have in his life.\n✅ Company Info → Important business details like policies, pricing, projects, and past deals.\n✅ Past Conversations & Stories → Notes from past meetings, key decisions, and client interactions, our past convo will be stored in personal data\n✅ Important Docs & References → Store and fetch links, files, or summaries Salman might need later.\nAlso the team mates information and contacts\n\n \nI'll tell you where it will be:  (Always understand that we only have one knowledge base and the tables we have is \"Notifications\", \"Personal\", \"Contacts\")\nKnowledge base will have everything including those tables. \nWhen you want to get a data you should check these two tables and should give the data."
        },
        "toolDescription": "Call this everytime while execution.\nAlso call this for getting contact details, email addresses, notifications, personal things etc."
      },
      "typeVersion": 2.2
    },
    {
      "id": "29202c01-b95e-4f02-87b9-b1fe1db5f7f0",
      "name": "get many records",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        976,
        1616
      ],
      "parameters": {
        "options": {
          "permissionLevel": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Permission_Level', ``, 'string') }}"
        },
        "resource": "base"
      },
      "typeVersion": 2.1
    },
    {
      "id": "0b4072fd-e444-4514-9464-ff817f6ce356",
      "name": "Create a record - personal",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        608,
        1808
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Table', ``, 'string') }}"
        },
        "columns": {
          "value": {
            "personal data": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('personal_data', `data from the ai`, 'string') }}"
          },
          "schema": [
            {
              "id": "personal data",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "personal data",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "personal data"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "create"
      },
      "typeVersion": 2.1
    },
    {
      "id": "719f50a4-04d3-44b3-a47d-ee4d6ffa5485",
      "name": "Search - personal",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        768,
        1808
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tbluLGQVqjaVMPskC",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tbluLGQVqjaVMPskC",
          "cachedResultName": "Personal"
        },
        "options": {},
        "operation": "search",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "typeVersion": 2.1
    },
    {
      "id": "8221be06-0ba2-4d2c-aae0-de8ab6391211",
      "name": "Create or Update Existing - personal",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        560,
        1616
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tbluLGQVqjaVMPskC",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tbluLGQVqjaVMPskC",
          "cachedResultName": "Personal"
        },
        "columns": {
          "value": {},
          "schema": [
            {
              "id": "id",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "id",
              "defaultMatch": true
            },
            {
              "id": "personal data",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "personal data",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "autoMapInputData",
          "matchingColumns": [
            "personal data"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "upsert"
      },
      "typeVersion": 2.1
    },
    {
      "id": "561922ec-c6e8-4ba5-9b3f-2291a0df8ee8",
      "name": "delete record - personal",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        448,
        1808
      ],
      "parameters": {
        "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Record_ID', ``, 'string') }}",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tbluLGQVqjaVMPskC",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tbluLGQVqjaVMPskC",
          "cachedResultName": "Personal"
        },
        "operation": "deleteRecord"
      },
      "typeVersion": 2.1
    },
    {
      "id": "6720fe8b-20e6-4acd-92e7-7209f0429568",
      "name": "get record - personal",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        752,
        1616
      ],
      "parameters": {
        "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Record_ID', ``, 'string') }}",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tbluLGQVqjaVMPskC",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tbluLGQVqjaVMPskC",
          "cachedResultName": "Personal"
        },
        "options": {}
      },
      "typeVersion": 2.1
    },
    {
      "id": "94ad3263-85e2-4fc5-98f2-41e69894b62c",
      "name": "Update record - personal",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        912,
        1808
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tbluLGQVqjaVMPskC",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tbluLGQVqjaVMPskC",
          "cachedResultName": "Personal"
        },
        "columns": {
          "value": {},
          "schema": [
            {
              "id": "id",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "id",
              "defaultMatch": true
            },
            {
              "id": "personal data",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": false,
              "required": false,
              "displayName": "personal data",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "autoMapInputData",
          "matchingColumns": [
            "id"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "update"
      },
      "typeVersion": 2.1
    },
    {
      "id": "1eb0260e-c488-46fc-a160-af1092483d54",
      "name": "Search notifications",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        432,
        2016
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblnifhM4rV6psSrN",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tblnifhM4rV6psSrN",
          "cachedResultName": "Notifications"
        },
        "options": {},
        "operation": "search",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "typeVersion": 2.1
    },
    {
      "id": "05de7ebd-2f90-44ab-8b83-8d74dc40874a",
      "name": "get record - notifications",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        288,
        1824
      ],
      "parameters": {
        "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Record_ID', ``, 'string') }}",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblnifhM4rV6psSrN",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tblnifhM4rV6psSrN",
          "cachedResultName": "Notifications"
        },
        "options": {}
      },
      "typeVersion": 2.1
    },
    {
      "id": "2b48d892-5432-4c24-87af-29045937fb1f",
      "name": "get record - contacts",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        624,
        2016
      ],
      "parameters": {
        "id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Record_ID', ``, 'string') }}",
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblnTD81v7IZ4rh5m",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tblnTD81v7IZ4rh5m",
          "cachedResultName": "Contact details"
        },
        "options": {}
      },
      "typeVersion": 2.1
    },
    {
      "id": "9ab68f1c-59bc-488a-9a86-0ec51064ed04",
      "name": "Search contacts",
      "type": "n8n-nodes-base.airtableTool",
      "position": [
        800,
        2016
      ],
      "parameters": {
        "base": {
          "__rl": true,
          "mode": "list",
          "value": "appSR6OLUZFuWzXiD",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD",
          "cachedResultName": "knowledge base"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": "tblnTD81v7IZ4rh5m",
          "cachedResultUrl": "https://airtable.com/appSR6OLUZFuWzXiD/tblnTD81v7IZ4rh5m",
          "cachedResultName": "Contact details"
        },
        "options": {},
        "operation": "search",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "typeVersion": 2.1
    },
    {
      "id": "e4cf6319-ab84-4c51-9260-30fdeb62b9c1",
      "name": "Window Buffer Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        368,
        1632
      ],
      "parameters": {
        "sessionKey": "Memory_key_BAse",
        "sessionIdType": "customKey"
      },
      "typeVersion": 1.3
    },
    {
      "id": "6326b708-a25e-4585-b0b4-3621816e4a5a",
      "name": "Google Gemini Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        192,
        1632
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "b8207ac2-7acb-40f1-9654-ce2df123c882",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        96,
        1376
      ],
      "parameters": {
        "color": 7,
        "width": 1056,
        "height": 800,
        "content": "## Memory Agent"
      },
      "typeVersion": 1
    },
    {
      "id": "0d55a35e-6913-414c-9eea-7944c0160607",
      "name": "close task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        1616,
        1952
      ],
      "parameters": {
        "taskId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}",
        "operation": "close"
      },
      "typeVersion": 2.1
    },
    {
      "id": "9a272511-d9f9-410f-a6a4-da99f240ade0",
      "name": "delete task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        1616,
        1760
      ],
      "parameters": {
        "taskId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}",
        "operation": "delete"
      },
      "typeVersion": 2.1
    },
    {
      "id": "54647ac2-b029-4715-8804-4853e78d72ef",
      "name": "Get a single task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        2096,
        1952
      ],
      "parameters": {
        "taskId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}",
        "operation": "get"
      },
      "typeVersion": 2.1
    },
    {
      "id": "92e57c4b-c3ce-40ec-a9fe-a7cd27e4457b",
      "name": "Get many tasks",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        1776,
        1952
      ],
      "parameters": {
        "filters": {
          "filter": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Filter', ``, 'string') }}"
        },
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "typeVersion": 2.1
    },
    {
      "id": "c290fc61-1562-4919-a735-325b99a6ae56",
      "name": "move a task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        1936,
        1952
      ],
      "parameters": {
        "taskId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}",
        "options": {},
        "project": {
          "__rl": true,
          "mode": "id",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Project_Name_or_ID', ``, 'string') }}"
        },
        "operation": "move"
      },
      "typeVersion": 2.1
    },
    {
      "id": "a4d50302-e8c9-495b-8850-da32eddd9afd",
      "name": "reopen task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        2096,
        1760
      ],
      "parameters": {
        "taskId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}",
        "operation": "reopen"
      },
      "typeVersion": 2.1
    },
    {
      "id": "c4352e87-27d8-475d-934e-d4ab73b3c620",
      "name": "update task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        1776,
        1760
      ],
      "parameters": {
        "taskId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}",
        "operation": "update",
        "updateFields": {}
      },
      "typeVersion": 2.1
    },
    {
      "id": "1d8c3bc4-1a4e-49b3-ac35-b3f02c2f0810",
      "name": "create task",
      "type": "n8n-nodes-base.todoistTool",
      "position": [
        1936,
        1760
      ],
      "parameters": {
        "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Content', ``, 'string') }}",
        "options": {},
        "project": {
          "__rl": true,
          "mode": "list",
          "value": "2323622913",
          "cachedResultName": "Inbox"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "c2d752e5-f4ef-4cae-92ef-4d8bf20ca283",
      "name": "Google Gemini Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        1440,
        1760
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "abf20a62-f4b3-42f8-b131-4070dfa8a28b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1344,
        1376
      ],
      "parameters": {
        "color": 7,
        "width": 1008,
        "height": 800,
        "content": "## Todo and task manager"
      },
      "typeVersion": 1
    },
    {
      "id": "1e544ffe-534c-4fd0-bd27-50df1a86952c",
      "name": "todo_and_task_manager",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1728,
        1488
      ],
      "parameters": {
        "text": "={{ $('When Executed by Another Workflow').item.json.query }}",
        "options": {
          "systemMessage": "You are TaskManager_Agent, Salman’s AI-powered task and project manager. Your job is to create, update, track, move, and close tasks while keeping things smooth and organized. You ensure Salman stays on top of everything, follows up automatically, and gets reminders only when needed.\n\n✅ Capabilities:\n🆕 Create → Add new tasks based on Salman’s requests.\n✏️ Update → Modify task details like deadlines, priority, or assignee.\n📌 Get / Get Many → Fetch a specific task or show a list of all tasks.\n✅ Close / Reopen → Mark tasks as complete or reopen them when needed.\n🗑️ Delete → Remove tasks that are no longer needed.\n🔄 Move → Change the position or category of a task for better organization.\n\n\nCurrent Date: {{ $now }}\nAlways give date in: (dd/mm/yyyy) format"
        },
        "toolDescription": "Use for todo and task "
      },
      "typeVersion": 2.2
    },
    {
      "id": "0e107a7b-05af-4e8c-817c-b75d68786855",
      "name": "SerpAPI",
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "position": [
        2800,
        1808
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "5f1a2863-3570-44b3-98b1-476d9738f617",
      "name": "Wikipedia",
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "position": [
        3200,
        1808
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "e8910f48-549a-42dd-a948-0510f24481e6",
      "name": "Wolfram Alpha",
      "type": "@n8n/n8n-nodes-langchain.toolWolframAlpha",
      "position": [
        2976,
        1808
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "ee1517b0-d402-4c18-9729-7c5c8c250503",
      "name": "Google Gemini Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        2576,
        1808
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "e1ee1ffd-b2dd-4064-85d1-2bee96820e66",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2432,
        1376
      ],
      "parameters": {
        "color": 7,
        "width": 1008,
        "height": 672,
        "content": "## Research Agent"
      },
      "typeVersion": 1
    },
    {
      "id": "52e9bdfa-631b-471d-84a9-67b241436b00",
      "name": "research_Agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        2832,
        1488
      ],
      "parameters": {
        "text": "={{ $('When Executed by Another Workflow').item.json.query }}",
        "options": {
          "systemMessage": "You are the **Research_Agent**, a smart and proactive AI assistant that helps Salman find and analyze information. Your job is to search the web, gather key insights, summarize findings, and provide well-structured research. You ensure Salman gets the most relevant and up-to-date information without unnecessary complexity.  \n\n🔍 **Research Capabilities:**  \n✅ **Web Search** → Find the most relevant and updated information from reliable sources.  \n✅ **Summarize Key Points** → Break down complex topics into simple, easy-to-understand insights.  \n✅ **Compare & Analyze** → Provide side-by-side comparisons of products, services, or ideas.  \n✅ **Verify Facts** → Cross-check information to ensure accuracy and credibility.  \n✅ **Suggest Next Steps** → Offer recommendations on what to explore further based on research.\n\n\nNow: {{ $now }}\n\n\nTools you have access to:\n* Wolfram Alpha\n* SERP API\n* Wikipedia. \n\nChoose the appropriate tool based on the query, and if one tool is not working then try to search on the other to give an answer."
        },
        "toolDescription": "Call this agent whenever you need to access the web or to research or to get the updated and relavent information from web "
      },
      "typeVersion": 2.2
    },
    {
      "id": "0a9ec556-9117-451d-84b9-0bfc95bd7dbb",
      "name": "email_agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        1088,
        2416
      ],
      "parameters": {
        "text": "{{ $('When Executed by Another Workflow').item.json.query }}",
        "options": {
          "systemMessage": "You are an email management assistant responsible for composing and formatting professional emails in HTML. Every email must be signed off as follows, with a line break between \"Best,\" and \"Jeni, Salman's Assistant\":\n\nBest,\nJeni, Salman's Assistant\n\nEmail Management Rules\nGet the appropriate email ID from contacts before sending the mail\nSending Emails: Call this tool to immediately send the email without asking for confirmation.\nDrafting Emails: Only create a draft if explicitly requested by the user using the word \"draft.\" Otherwise, always send the email.\nRetrieving Emails: Use \"Get Emails\" when the user asks for their emails.\nManaging Labels:\nUse \"Get Labels\" to retrieve available labels.\nUse \"Label Email\" to assign labels to an email.\nMarking as Unread:\nUse \"Get Emails\" to obtain the message ID.\nThen, use \"Mark Unread\" to mark an email as unread.\nReplying to Emails:\nUse \"Get Emails\" to retrieve the email thread.\nThen, use \"Email Reply\" to send the response.\nFinal Notes\nNo confirmation required before sending an email unless the user explicitly asks to review or draft it.\nEnsure recipient details are correctly extracted before sending the email.\nAlways send the text in body instead of HTML. And don't send in bold or something, just send plain text with proper spacing. \nGet Recipient Details from query\nCurrent Date/Time: {{ $now }}\n\n"
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "e2f2e8df-ac65-4434-a0ee-72f49ef9aadd",
      "name": "Send Email",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1024,
        2752
      ],
      "webhookId": "6ece5bed-e23d-4d08-814c-ba2def26a187",
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', `this is the body`, 'string') }}",
        "options": {
          "appendAttribution": false
        },
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', `this is the subject`, 'string') }}",
        "emailType": "text"
      },
      "typeVersion": 2.1
    },
    {
      "id": "a32d6218-1156-419a-b22a-9702059396a1",
      "name": "Create Draft",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1360,
        2752
      ],
      "webhookId": "b522d183-98c9-4973-8e26-99da5e707ed7",
      "parameters": {
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', `this is the message`, 'string') }}",
        "options": {
          "sendTo": "={{ $fromAI(\"emailAddress\") }}"
        },
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', `this is the subject`, 'string') }}",
        "resource": "draft",
        "emailType": "html"
      },
      "typeVersion": 2.1
    },
    {
      "id": "a9e0c6ff-60e7-4b34-9b00-75e70c528193",
      "name": "Email Reply",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1200,
        2944
      ],
      "webhookId": "1f32e701-c5d1-4636-a2f3-ee8becd8b88b",
      "parameters": {
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false
        },
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', `the message ID`, 'string') }}",
        "operation": "reply"
      },
      "typeVersion": 2.1
    },
    {
      "id": "0224f2eb-64f8-4bf1-a549-7c02e722fe7a",
      "name": "Get Labels",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1520,
        2944
      ],
      "webhookId": "1e128c8b-9f31-4ed3-89f2-8c0238194067",
      "parameters": {
        "resource": "label",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "typeVersion": 2.1
    },
    {
      "id": "a7bd1a8b-0187-4948-ab46-86c6a4a458f7",
      "name": "Label Emails",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1200,
        2752
      ],
      "webhookId": "e7238840-c3b5-4116-b5ae-c8bb677fecf7",
      "parameters": {
        "labelIds": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', `Label_Names_or_IDs`, 'string') }}",
        "messageId": "={{ $fromAI(\"ID\",\"the ID of the message\") }}",
        "operation": "addLabels"
      },
      "typeVersion": 2.1
    },
    {
      "id": "202ab1da-d988-480a-ad37-ab2f3b2271a1",
      "name": "Mark Unread",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1360,
        2944
      ],
      "webhookId": "69904b8b-8728-4dd4-ac79-0fe57a3f85a8",
      "parameters": {
        "messageId": "={{ $fromAI(\"messageID\") }}",
        "operation": "markAsUnread"
      },
      "typeVersion": 2.1
    },
    {
      "id": "62a316b3-fb6d-4937-ac29-c68f79fab246",
      "name": "Gmail",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1520,
        2752
      ],
      "webhookId": "23761dab-5be2-4ace-84d1-3518594ac00f",
      "parameters": {
        "limit": 10,
        "simple": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Simplify', ``, 'boolean') }}",
        "filters": {},
        "options": {},
        "operation": "getAll"
      },
      "typeVersion": 2.1
    },
    {
      "id": "c246aae3-6dec-4b6a-9b72-1ad1a2ff4e34",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        1024,
        2944
      ],
      "parameters": {
        "options": {},
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ahHrVieb4EN8cbdKb9QVLGKagVI9XayWlE1qdiEv134/edit#gid=0",
          "cachedResultName": "Team Members"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1ahHrVieb4EN8cbdKb9QVLGKagVI9XayWlE1qdiEv134",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ahHrVieb4EN8cbdKb9QVLGKagVI9XayWlE1qdiEv134/edit?usp=drivesdk",
          "cachedResultName": "contacts"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "bdfc88fb-1ccf-4286-9216-4ab4a378cb76",
      "name": "Window Buffer Memory2",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        944,
        2560
      ],
      "parameters": {
        "sessionKey": "email",
        "sessionIdType": "customKey"
      },
      "typeVersion": 1.3
    },
    {
      "id": "e3b04d53-290a-4703-9939-b4b50769082e",
      "name": "Google Gemini Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        720,
        2512
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "f2a1da40-f311-4e44-a00e-7ef4bdeb7d03",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        2304
      ],
      "parameters": {
        "color": 7,
        "width": 1008,
        "height": 800,
        "content": "## Todo and task manager"
      },
      "typeVersion": 1
    },
    {
      "id": "7f09d0de-aa5e-4d08-92c6-97086c02aad3",
      "name": "project_management",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        2336,
        2400
      ],
      "parameters": {
        "text": "={{ $('When Executed by Another Workflow').item.json.query }}",
        "options": {
          "systemMessage": "You are an project manager agent, You will be managing and taking note of all projects, tasks and todos of company and the client.\n\nSo when someone asks about the project details, you'll be giving the project details. \n\nAlso you can add notes (feedback or description) and you can delete, create and manage projects. "
        },
        "toolDescription": "Call this agent whenever you need to access the project details or the current progress of company or tasks that are related to company or to followup to the team based on the tasks."
      },
      "typeVersion": 2.2
    },
    {
      "id": "cc74b955-5d3b-4a47-8b8c-a70a28204e93",
      "name": "Clients task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2432,
        2704
      ],
      "parameters": {
        "options": {},
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": 929617135,
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=929617135",
          "cachedResultName": "Client Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        },
        "combineFilters": "OR"
      },
      "typeVersion": 4.5
    },
    {
      "id": "d435a332-2599-4bf3-a53b-284870e55ec1",
      "name": "Company task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2608,
        2704
      ],
      "parameters": {
        "options": {},
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "2bf33795-29c6-45fc-b2c8-70f195f8d444",
      "name": "update notes in company task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2800,
        2704
      ],
      "parameters": {
        "columns": {
          "value": {
            "Goals": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Goals__using_to_match_', ``, 'string') }}",
            "Notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}",
            "Owner": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Owner', ``, 'string') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "End date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_date', ``, 'string') }}",
            "Priority": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'string') }}",
            "Start date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_date', ``, 'string') }}"
          },
          "schema": [
            {
              "id": "Goals",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Goals",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Priority",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Priority",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Owner",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Owner",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Start date",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Start date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "End date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "End date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Notes",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Notes",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "Goals"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "update",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "f0158592-c382-478f-871d-20de7f1b27ee",
      "name": "update notes in client task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2976,
        2704
      ],
      "parameters": {
        "columns": {
          "value": {
            "Goals": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Goals__using_to_match_', ``, 'string') }}",
            "Notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}",
            "Owner": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Owner', ``, 'string') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "End date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_date', ``, 'string') }}",
            "Priority": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'string') }}",
            "Start date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_date', ``, 'string') }}"
          },
          "schema": [
            {
              "id": "Goals",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Goals",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Priority",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Priority",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Owner",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Owner",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Start date",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Start date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "End date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "End date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Notes",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Notes",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "Goals"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "update",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "563addb1-e24c-4499-9208-c83965d9c878",
      "name": "Create company task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2432,
        2896
      ],
      "parameters": {
        "columns": {
          "value": {
            "Goals": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Goals', ``, 'string') }}",
            "Notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}",
            "Owner": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Owner', ``, 'string') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "End date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_date', ``, 'string') }}",
            "Priority": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'string') }}",
            "Start date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_date', ``, 'string') }}"
          },
          "schema": [
            {
              "id": "Goals",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Goals",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Priority",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Priority",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Owner",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Owner",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Start date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Start date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "End date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "End date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Notes",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Notes",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "16cbd3f4-4088-4f69-a7cf-8a87169f0911",
      "name": "create clients task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2608,
        2896
      ],
      "parameters": {
        "columns": {
          "value": {
            "Goals": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Goals', ``, 'string') }}",
            "Notes": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}",
            "Owner": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Owner', ``, 'string') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}",
            "End date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_date', ``, 'string') }}",
            "Priority": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'string') }}",
            "Start date": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_date', ``, 'string') }}"
          },
          "schema": [
            {
              "id": "Goals",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Goals",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Priority",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Priority",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Owner",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Owner",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Start date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Start date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "End date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "End date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Notes",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Notes",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "7b9b33ef-360a-42d4-ab7f-e4a570bfadd8",
      "name": "delete company task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2800,
        2896
      ],
      "parameters": {
        "operation": "delete",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        },
        "startIndex": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_Row_Number', ``, 'number') }}",
        "numberToDelete": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Number_of_Rows_to_Delete', ``, 'number') }}"
      },
      "typeVersion": 4.5
    },
    {
      "id": "3e83c3f5-3d35-46ea-a00e-ed750235a14d",
      "name": "delete client task",
      "type": "n8n-nodes-base.googleSheetsTool",
      "position": [
        2976,
        2896
      ],
      "parameters": {
        "operation": "delete",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit#gid=0",
          "cachedResultName": "Company Tasks"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/15IpJm8oHiZMSc0_F6ZRZbNWPH3bpvleN4skub_l95qo/edit?usp=drivesdk",
          "cachedResultName": "Web I Mother Doc"
        },
        "startIndex": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_Row_Number', ``, 'number') }}",
        "numberToDelete": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Number_of_Rows_to_Delete', ``, 'number') }}"
      },
      "typeVersion": 4.5
    },
    {
      "id": "c675d8dd-5f31-47d2-8381-4434c18f12bb",
      "name": "Window Buffer Memory4",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        2256,
        2704
      ],
      "parameters": {
        "sessionKey": "dasds",
        "sessionIdType": "customKey"
      },
      "typeVersion": 1.3
    },
    {
      "id": "2f967aa3-cd31-49f2-9e1c-0e894319a20e",
      "name": "Google Gemini Chat Model6",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        2080,
        2704
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "21b58c35-c0ba-46eb-b99b-f66bbe1ca803",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1904,
        2304
      ],
      "parameters": {
        "color": 7,
        "width": 1280,
        "height": 800,
        "content": "## Project Manager"
      },
      "typeVersion": 1
    },
    {
      "id": "8506e05d-6e4d-437c-b767-8779e9403309",
      "name": "calendar_agent",
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "position": [
        3728,
        2400
      ],
      "parameters": {
        "text": "{{ $('When Executed by Another Workflow').item.json.query }}",
        "options": {
          "systemMessage": "You are the Calendar_Agent, a smart and proactive AI assistant that manages Salman’s schedule. Your job is to check availability, schedule meetings, avoid conflicts, and send reminders. You always ensure that Salman’s time is used efficiently.\n\n📅 Calendar Management Capabilities:\n✅ Check Availability → Look at existing events before scheduling anything new.\n✅ Schedule Events → Create meetings, appointments, and deadlines.\n✅ Reschedule & Update → Adjust existing events when needed.\n✅ Cancel Events → Remove or postpone meetings based on priority.\n✅ Send Reminders → Notify Salman and his team about upcoming events.\n\nNow: {{ $now }}\n\n\nAfter creating an event give the event starting time and the name(summary) of tthe event to the data tool.  \n\nIn the format of: \n{\n\"event_name\" : \"Actual Event name\",\n\"event_time\" : \"Actual Starting time\"\n}"
        },
        "toolDescription": "Call this tool whenever you need to do any actions regarding calendar, schedule and appoinment"
      },
      "typeVersion": 2.2
    },
    {
      "id": "9db554d1-8016-49a6-8c47-3eab2958909c",
      "name": "Get all event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        3920,
        2704
      ],
      "parameters": {
        "options": {},
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "typeVersion": 1.3
    },
    {
      "id": "5b4aaf16-e2b4-4dba-923f-b945494039ae",
      "name": "Delete event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        3760,
        2704
      ],
      "parameters": {
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {},
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "operation": "delete"
      },
      "typeVersion": 1.3
    },
    {
      "id": "a7c0232c-1fd4-45e5-ba65-a56b6d43c372",
      "name": "Get a single event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        4080,
        2704
      ],
      "parameters": {
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {},
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "operation": "get"
      },
      "typeVersion": 1.3
    },
    {
      "id": "f0509a61-c77d-422f-bf32-7af1c7446f59",
      "name": "Update event",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        3920,
        2912
      ],
      "parameters": {
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "operation": "update",
        "updateFields": {},
        "useDefaultReminders": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Use_Default_Reminders', ``, 'boolean') }}"
      },
      "typeVersion": 1.3
    },
    {
      "id": "ecc09bec-3ab4-4452-b7a9-e24ae003fdef",
      "name": "Availablity operation agent",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        4080,
        2912
      ],
      "parameters": {
        "options": {},
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "resource": "calendar"
      },
      "typeVersion": 1.3
    },
    {
      "id": "54931a21-562e-4afc-b1e2-00b50afaff9b",
      "name": "Create Event with attendee",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        3760,
        2912
      ],
      "parameters": {
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "additionalFields": {
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}",
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Attendees', ``, 'string') }}"
          ],
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "f33a2b2d-4913-40fc-9d14-531f1f930912",
      "name": "Create Event without attendee",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        4272,
        2816
      ],
      "parameters": {
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "salman.jsdev@gmail.com",
          "cachedResultName": "salman.jsdev@gmail.com"
        },
        "additionalFields": {
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}",
          "attendees": [],
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}"
        }
      },
      "typeVersion": 1.3
    },
    {
      "id": "63af6f4a-aafd-4648-b180-475679c24cac",
      "name": "Google Gemini Chat Model5",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        3552,
        2704
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "2939e74c-1886-44d5-9407-ccbd6ff7750e",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3344,
        2304
      ],
      "parameters": {
        "color": 7,
        "width": 1168,
        "height": 800,
        "content": "## Calendar Agent"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7753477c-3e80-409e-b6d2-b371f7ca7ce4",
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Manager Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "research_Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram1": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia": {
      "ai_tool": [
        [
          {
            "node": "research_Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Labels": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "close task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Email Reply": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mark Unread": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "email_agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "memory_base": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "move a task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reopen task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Clients task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Company task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Draft": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete event": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 5
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Label Emails": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update event": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all event": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "email_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Manager Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wolfram Alpha": {
      "ai_tool": [
        [
          {
            "node": "research_Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get many tasks": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calendar_agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "research_Agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search contacts": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get many records": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a single task": {
      "ai_tool": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search - personal": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a single event": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete client task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "project_management": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create company task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create clients task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete company task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search notifications": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory1": {
      "ai_memory": [
        [
          {
            "node": "memory_base",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory2": {
      "ai_memory": [
        [
          {
            "node": "email_agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory4": {
      "ai_memory": [
        [
          {
            "node": "project_management",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "get record - contacts": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get record - personal": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "todo_and_task_manager": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Update record - personal": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete record - personal": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "memory_base",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "todo_and_task_manager",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "research_Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "email_agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "project_management",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with attendee": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a record - personal": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get record - notifications": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Availablity operation agent": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update notes in client task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update notes in company task": {
      "ai_tool": [
        [
          {
            "node": "project_management",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event without attendee": {
      "ai_tool": [
        [
          {
            "node": "calendar_agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create or Update Existing - personal": {
      "ai_tool": [
        [
          {
            "node": "memory_base",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  }
}