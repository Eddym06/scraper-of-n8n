{
  "name": "Agente RAG Agendamento",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "2d3f4d02-7f22-4e3a-9905-acf423b8fd8a",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        360,
        1860
      ],
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "9c08399d-a933-4734-9d58-229a53f13a9d",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -3360,
        2760
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "cb7f1975-ff0b-478b-b7ad-6357bef8ec0d",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -3560,
        2840
      ],
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "content": "## Busca Info no RAG",
        "height": 80,
        "width": 250,
        "color": 5
      },
      "id": "c14689e9-4ef2-41f6-9319-205ff2011bad",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        2000
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "1314f37d-6241-4c81-b2af-a7831b13e8b8",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        2300
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "6a56bf5b-698c-40a2-9b8f-87c74868c29f",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -4380,
        2580
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2c9Rh1a7lEy6a1BF",
          "name": "Google Drive Koch"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 5
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1afP7Z8GqxdZ0zli4eESoc3vrW1ZwQgkv",
          "mode": "list",
          "cachedResultName": "Prospect Demo IAN8N",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1afP7Z8GqxdZ0zli4eESoc3vrW1ZwQgkv"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "f050e59e-d133-453c-bd55-92b63d87ede3",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -5280,
        2520
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2c9Rh1a7lEy6a1BF",
          "name": "Google Drive Koch"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 4
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1afP7Z8GqxdZ0zli4eESoc3vrW1ZwQgkv",
          "mode": "list",
          "cachedResultName": "Prospect Demo IAN8N",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1afP7Z8GqxdZ0zli4eESoc3vrW1ZwQgkv"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "0a0f3b02-f9a4-4726-bb58-0c57513b2771",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -5280,
        2720
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "2c9Rh1a7lEy6a1BF",
          "name": "Google Drive Koch"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "543ff90e-2813-4a9e-ab2a-226af99140be",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3960,
        2780
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "f514e83a-0c7e-49fa-8e4d-7e082fd969ff",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        80,
        2040
      ],
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8508e5b1-062b-4e8e-890e-3b1b350c3099",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5100,
        2560
      ]
    },
    {
      "parameters": {
        "content": "# TREINAMENTO IA",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "9330f7b6-e429-45c6-a1e3-ebc1c634915e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        1100
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "ed96d3a3-c833-4e67-9398-838af487af3f",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3960,
        2400
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "102dadcc-367a-43d0-8d8d-62c0fec0d1b7",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -3820,
        2580
      ]
    },
    {
      "parameters": {},
      "id": "1624b234-6e4e-479d-8fe3-5586d1dc9f5c",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -3340,
        2900
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "0b169442-626c-41a1-bb8d-c98069279e7e",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -3680,
        2580
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "c33a2fa0-d9fa-430d-85c0-a9b194888a6f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4200,
        2580
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "341d8b3c-f6df-4d47-815f-a8254b18b0dd",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -3520,
        2340
      ],
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "2ee9b0dd-ba52-4893-879d-d4fa7b2a1cb1",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3960,
        2580
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -840,
        1080
      ],
      "typeVersion": 1,
      "id": "895dba1d-7188-48cf-be97-dbb9c64c11f8",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        1720
      ],
      "typeVersion": 1,
      "id": "a69f3f9d-fa0b-4cba-ae8c-0c61c6307b72",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5320,
        2280
      ],
      "typeVersion": 1,
      "id": "142d0dda-6ff6-4636-a597-96556c4ecc89",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta específica > Verificar o tipo de arquivo e realizar conversão > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5340,
        2980
      ],
      "typeVersion": 1,
      "id": "5598cf00-6c73-411c-89b5-38276f93c1ce",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 480,
        "width": 213,
        "color": 5
      },
      "id": "36f08f51-7a44-4f4f-8988-fe7520f06d98",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5320,
        2420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0f9dfa9b-6880-4683-b96b-22aebdb02079",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        220,
        840
      ],
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e8eece80-b899-4496-93e1-82f525417e86",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        680
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "28bb5342-20c0-4d82-b6bb-ffb60e9d03f8",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        340,
        840
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Sempre que tiver um link envie ele de forma separada sem alteração\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)"
            }
          ]
        }
      },
      "id": "b38c419c-da16-4e04-838e-55e6d0fce99f",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        220,
        540
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        400
      ],
      "typeVersion": 1,
      "id": "981676ba-b217-4b20-a655-446587fea413",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "b5323c15-5a80-4876-ab37-99b31aace318",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        420
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3700,
        1260
      ],
      "typeVersion": 1,
      "id": "08e74cff-29fa-463b-9e53-f2c5021115e9",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Gera/Consulta sessionId",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "330e657f-cee0-45ad-9b3d-d0dc1608e78b",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3680,
        1280
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0985904e-7d4e-4fba-ae26-2c44200855e1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "afca5ada-064c-41d2-87a4-8106aea6837a",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -180,
        1140
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4880,
        1260
      ],
      "typeVersion": 1,
      "id": "b545abfe-3aa6-4998-b9d4-5310fb1aad26",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -740,
        1340
      ],
      "id": "a276f62b-034f-48e1-a6ac-0b41acc0dd99",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem_completa }}",
        "options": {
          "systemMessage": "={\n  \"name\": \"Camila\",\n  \"context\": {\n    \"identity\": \"Consulora TR Financial\",\n    \"business\": \"Mapear a vida financeira e instruir o cliente a fazer as melhores escolhas de acordo com a sua necessidade. Proporcionar uma experiência única em cada atendimento e zelar pelo seu maior patrimônio, oferecendo um diagnóstico 360° para você e para sua empresa.\",\n    \"language\": \"Português Brasileiro\",\n    \"data_atual\": \"{{ $now.weekdayLong }}, Semana {{ $now.format('WW') }}, {{ $now.format('DD/MM/yyyy') }}, {{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}\n\n\"\n  },\n  \"personality\": [\n    \"Consultora Financeira\",\n    \"Especialista em atendimento ao cliente\"\n  ],\n  \"objectives\": [\n    \"Fazer captação ativa\",\n    \"Entender a demanda do cliente\",\n    \"Convencer ele de agendar uma reunião de 30 a 60 minutos\"\n  ],\n  \"tools\": [\n    {\n      \"name\": \"buscar_documentos\",\n      \"usage\": \"Toda vez que receber uma pergunta que não está nesse prompt, use a ferramenta para ter as informações. Caso não tenha a informação na ferramenta, avise que vai chamar um humano.\"\n    },\n    {\n      \"name\": \"criar_reuniao\",\n      \"usage\": \"Use quando precisar agendar uma reunião com o cliente. Sempre colete e-mail e data para usar essa ferramenta. Só é permitido agendar 1 reunião por vez de segunda a sexta, das 10h às 17h.\"\n    },\n    {\n      \"name\": \"reagendar_reuniao\",\n      \"usage\": \"Use quando a pesoa solicitar que mude a data da reunião reagendar uma reunião com o cliente. Sempre colete e-mail e data para usar essa ferramenta.\"\n    },\n    {\n      \"name\": \"cancelar_reuniao\",\n      \"usage\": \"Use quando precisar cancelar uma reunião com o cliente. Sempre colete e-mail e data para usar essa ferramenta.\"\n    }\n  ],\n  \"general_rules\": [\n    \"Não falar sobre outros assuntos. O único assunto permitido é sobre a TR Financial\",\n    \"Não envie informações que você não tem conhecimento. Use a tool 'buscar_documentos' para obter informações.\",\n    \"Caso a primeira mensagem tenha sido enviada pelo agente: pule o step 'apresentar_coletar_nome'.\"\n  ],\n  \"flow\": {\n    \"steps\": [\n      {\n        \"step\": \"apresentar_coletar_nome\",\n        \"instructions\": \"Se apresente e pergunte o nome do cliente.\",\n        \"example_message\": \"Olá, sou a Camila, especialista em negócios da TR Financial. Qual o seu nome?\"\n      },\n      {\n        \"step\": \"apresentar_nossa_solucao\",\n        \"instructions\": \"Explicar nossa solução.\",\n        \"example_message\": \"Deixa eu te explicar nossa solução: nós desenvolvemos uma Agente de IA que atende no WhatsApp. Ela entende a demanda do cliente, faz todo o atendimento inicial e busca fazer com que o seu cliente agende Reuniões. Além disso, após atender o cliente e tirar as dúvidas dele, ela te avisa no privado que há um novo contato e te traz um resumo do atendimento para agilizar o seu trabalho.\"\n      },\n      {\n        \"step\": \"explicar_nosso_servico\",\n        \"instructions\": \"Realize essas etapas 1 a 1.\",\n        \"example_messages\": [\n          \"etapa_1\": \"Hoje você tem atendimento ao cliente ou é você mesmo que faz o atendimento?\",\n        \"etapa_2\": \"Se você tiver um atendimento 24 horas por dia, acredita que pode ajudar o seu negócio?\",\n        \"etapa_3\": \"Hoje nossos clientes estão super satisfeitos com a nossa solução, gostaria te apresentar essa IA de atendimento 24 horas por dia, gostaria de ver ela funcionando na prática?\",\n\"rueles\": \" caso o cliente fale que sim vá para o próximo step se ele falar que não, pergunte o motivo\"\n        ]\n      },\n      {\n        \"step\": \"agendamento_de_reuniao\",\n        \"instructions\": \"Caso o cliente queria ver a Ia na prática, agende uma reunião.\",\n        \"example_message\": \"Para apresentar nossa IA de atendimento, na prática preciso agendar uma reunião rápida que dura entre 20 a 30 minutos, assim vamos conseguir te mostrar ela funcionando em um cliente nosso.\",\n        \"rules\": \"caso o cliente de positivo para agendar a reunião peça o seu email data e Use a tool 'criar_reuniao'.\"\n      }\n    ]\n  }\n}\n"
        }
      },
      "id": "b3160ae4-2399-4581-80be-e07a04bf8b72",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -660,
        1280
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4560,
        2560
      ],
      "id": "c82dc519-a8ef-4b04-82a2-bde9ddf290b7",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Code1').item.json.sessionId }}",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -640,
        1480
      ],
      "id": "4629e8ac-57f1-43cb-8716-d0e2b6c6c695",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "pterapeuta2",
        "options": {}
      },
      "id": "4a46b7f1-3c8b-492f-8243-67b299cc2a72",
      "name": "Webhook EVO",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5280,
        1440
      ],
      "webhookId": "b71e9b99-82ee-4797-82de-e17848ba6ae4"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4080,
        1260
      ],
      "typeVersion": 1,
      "id": "72b606ec-684c-4633-bcbc-f8068d46d3c4",
      "name": "Sticky Note42"
    },
    {
      "parameters": {
        "content": "# Dados",
        "height": 80,
        "width": 150,
        "color": 5
      },
      "id": "dd2b1e94-7782-4402-a4d0-fe980ac501ce",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4060,
        1280
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com/",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "688e7624-00b1-4b2e-beea-c22d303a1669"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Fluxo Normal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Avisa grupo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -320,
        1320
      ],
      "id": "e0f1f22d-7c38-45b4-b4ca-251be93c9ed0",
      "name": "Switch2"
    },
    {
      "parameters": {
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        860,
        700
      ],
      "id": "3069340b-0ecc-4a77-a5ab-4c0a2e4b70e1",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "TXhIzR3whfXb8Uft",
          "name": "Evolution Ecomtools"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        660,
        180
      ],
      "id": "647ec67b-2ddd-45db-99d7-f249dd288a57",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "defac08a-6745-422b-bb05-90da9f47d91b",
              "leftValue": "={{ $('Busca Telefone').last().json.values() }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        140
      ],
      "id": "ae214715-ada3-4efd-a423-5be7933e9f09",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "7aeecbaa-9d81-4702-b27d-36b3bdabed13",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "content": "# Cadastra Chat Supabase",
        "height": 80,
        "width": 450,
        "color": 5
      },
      "id": "8d8d9b72-6b3a-48d9-aafe-7e778175f8d6",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        20
      ]
    },
    {
      "parameters": {
        "instanceName": "teste koch",
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        840,
        500
      ],
      "id": "45bec286-f7e0-4107-87b0-725b67575478",
      "name": "Evolution API5",
      "credentials": {
        "evolutionApi": {
          "id": "TXhIzR3whfXb8Uft",
          "name": "Evolution Ecomtools"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "terapeuta"
            },
            {
              "keyName": "updated_at",
              "condition": "gt",
              "keyValue": "={{ $now.plus(5,'minutes') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5260,
        2120
      ],
      "id": "ec1faa64-72ab-4390-b8a2-5373fbe23886",
      "name": "ListChats-Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $json.phone }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4800,
        2120
      ],
      "id": "f751d0f9-2715-41d8-be01-e05a5027f1a7",
      "name": "ListMessages-Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 2,
              "triggerAtHour": 8,
              "triggerAtMinute": 45
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5500,
        1920
      ],
      "id": "c0e88fed-5b92-495f-b566-d9eb2f4632a2",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chat_messages",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Aggregate1')?.item?.json?.conversas?.last()?.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "active",
              "fieldValue": "false"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3160,
        2060
      ],
      "id": "ff365b72-b1c9-494d-a087-2ad1999d6c96",
      "name": "DisableMessage-Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c9c00627-84a9-49a9-bc7e-d923a5918346",
              "name": "output",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "0e34f673-b6dc-4748-89d2-a178dfe91853",
              "name": "phone",
              "value": "={{ $('Aggregate1').item.json.conversas.last().phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3640,
        1740
      ],
      "id": "891031a9-74bf-4e9c-a8f1-5c66a77ac569",
      "name": "SetConfig"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Você é um agente facilitador de vendas e está buscando conversas não finalizadas entre o cliente e um agent de IA. \n\n# Cria a responda apenas a resposta não precisa justificar sua resposta\n\n# Identifique o cliente não enviou mais mensagens de resposta\n\n# Se o cliente não responder mesmo assim, agradeça e diga que irá encerrar o pedido e está a disposição para outros pedidos\n\n# Use frase simples e naturais como nos exemplos\n\nExemplos : \n - 'Oi .. ainda está ai'\n - 'E ai ? vamos finalizar o pedido?' \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -3960,
        1740
      ],
      "id": "b1fb38a7-95cc-4d07-8572-3a818890be6e",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "inputText": "={{ $json.texto }}",
        "categories": {
          "categories": [
            {
              "category": "pendente_resposta",
              "description": "A conversa está pendente devido a uma informação que o cliente ficou de fornecer ou confirmar, ou está pendende de marcar a reunião"
            },
            {
              "category": "encerrada",
              "description": "Houve um desfecho da conversa  ouagendamento de uma reuniãoe o agente de IA se despediu"
            },
            {
              "category": "sem_resposta",
              "description": "=Se o cliente não respondeu mais as mensagens do agente - mensagem do cliente vazia"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        -4280,
        1940
      ],
      "id": "3186e5b4-b818-448f-a504-7fd048f79075",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -4600,
        1940
      ],
      "id": "5999ccb7-bce4-4cf9-bf13-895a0b606d0e",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate1').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4420,
        1940
      ],
      "id": "c56fd3e4-4ec3-422d-96d2-ff5ff9b4c40d",
      "name": "Code4"
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().message_type }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3540,
        1920
      ],
      "id": "08d664fc-a336-4cf3-af65-97caf0c4d7fa",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4960,
        1920
      ],
      "id": "943d0f08-debc-4887-b995-7c1760a01ab2",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -3840,
        1880
      ],
      "id": "1c76970e-2e2f-4d30-a4fe-a802c4023432",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3560,
        2060
      ],
      "id": "da8ccb47-20ec-4579-bba4-01ab9d0c36d9",
      "name": "Wait2",
      "webhookId": "cd1f35d3-c129-4957-a72b-9f1fea576935"
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 2180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5360,
        1720
      ],
      "typeVersion": 1,
      "id": "1833ded5-db47-4050-9bd8-4a1f65c2daea",
      "name": "Sticky Note58"
    },
    {
      "parameters": {
        "content": "# Follow up Whatsapp",
        "height": 80,
        "width": 393,
        "color": 5
      },
      "id": "05f8dd3b-3c15-468b-b6b1-9b48e6e98597",
      "name": "Sticky Note59",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        1740
      ]
    },
    {
      "parameters": {
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3440,
        1740
      ],
      "id": "5e358763-9a84-4dae-9143-e26436fc57fb",
      "name": "Evolution API6",
      "credentials": {
        "evolutionApi": {
          "id": "TXhIzR3whfXb8Uft",
          "name": "Evolution Ecomtools"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -4280,
        2100
      ],
      "id": "44bd5d2e-0094-4e26-8902-1cadfe917f04",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Variáveis').item.json.telefone }}"
            },
            {
              "keyName": "app",
              "keyValue": "terapeuta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -80,
        280
      ],
      "id": "a37e7cf9-b23e-4f97-a7da-d637cd455d4b",
      "name": "Busca Telefone",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "chats",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Variáveis').item.json.telefone }}"
            },
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now}}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Code1').item.json.sessionId }}"
            },
            {
              "fieldId": "app",
              "fieldValue": "terapeuta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        360,
        -140
      ],
      "id": "20ed1f1b-9ee9-4ef5-9970-5430aaf600ea",
      "name": "Adiciona CHAT supabase",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1300,
        520
      ],
      "id": "2333cd97-e781-416a-bc89-37c52ccb9b3e",
      "name": "Atualiza CHAT Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $('Atendente').item.json.output }}"
            },
            {
              "fieldId": "user_message",
              "fieldValue": "={{ $('Mensagem Completa').item.json.mensagem_completa }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('dados_para_atendimento_humano1').item.json.message.content_type }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        840,
        -20
      ],
      "id": "d99507c8-7686-41ac-97d3-6275605d7052",
      "name": "Cria Histórico Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.lenght }}",
              "rightValue": 90,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        0,
        660
      ],
      "id": "2b3f81a5-130b-4630-8fed-caac2d156d61",
      "name": "Menos que 240 Caracteres"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "f2dc7319-0e3f-4cf7-ae06-7ff5002aa49c",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        480,
        680
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "d301c57e-88d0-4e98-9eeb-f5d0650bfece",
      "name": "1 segundo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1000,
        700
      ],
      "webhookId": "2ec24a1a-31fc-49f0-8e2f-532b131f1bd9"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4740,
        2560
      ],
      "id": "61041de4-6bf0-430c-a6d5-0417c4b0e37f",
      "name": "Retorna ID do arquivo"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "7d1cc138-0d50-45f3-abae-829a4af96034",
      "name": "Deleta linhas antigas do documento",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4940,
        2760
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4100,
        840
      ],
      "id": "e6cba24b-8120-47a6-a45a-af08a9aec22b",
      "name": "Cria Tabela Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3060,
        840
      ],
      "id": "676200dc-c265-4eba-bf13-50a4832723d7",
      "name": "Cria Tabela Documentos",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3320,
        1060
      ],
      "id": "3a7de690-5d18-4393-8be5-dca93bedaeca",
      "name": "Deleta Conteúdo Documentos",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4360,
        1060
      ],
      "id": "a9f9b579-00d9-4549-95bd-a04608cba8b6",
      "name": "Deleta Histórico",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3320,
        840
      ],
      "id": "bbbf9827-5fc8-4ed0-9564-88d3fe9a9957",
      "name": "Cria função Busca em Vetor",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3580,
        840
      ],
      "id": "9ae240a1-c0e2-4aec-a52a-23a014b453d2",
      "name": "Cria Extensão Vetor",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table chats (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  phone text,\n  updated_at text, \n  app text,\n  conversation_id text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3840,
        840
      ],
      "id": "0513ccdd-9c9f-4fdc-8ba2-1b5b92fb5fbb",
      "name": "Cria Tabela Chats",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chats",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3580,
        1060
      ],
      "id": "a1cf39a5-88d8-4306-b014-10427ae175d2",
      "name": "Deleta Conteúdo Chats",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3840,
        1060
      ],
      "id": "12410ae0-7fa7-4727-899c-f18ffeeda9b0",
      "name": "Deleta Conteúdo Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chat_messages",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4100,
        1060
      ],
      "id": "4ced5a6c-9b02-4d75-bd8e-c78048174822",
      "name": "Deleta Conteúdo Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE chat_messages (\n  id BIGSERIAL PRIMARY KEY,\n  created_at TIMESTAMPTZ, \n  phone TEXT,\n  conversation_id TEXT, \n  bot_message TEXT,\n  user_message TEXT, \n  message_type TEXT,\n  active BOOLEAN DEFAULT TRUE\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4360,
        840
      ],
      "id": "575f4566-127d-42fd-a8fc-ff6605c32fc0",
      "name": "Cria Tabela Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5360,
        1260
      ],
      "typeVersion": 1,
      "id": "571cb1f1-d05c-4ac8-9f09-48569c9df242",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "content": "# Webhook",
        "height": 80,
        "width": 196,
        "color": 5
      },
      "id": "d95061e0-e3bd-4faa-9ff4-301bbb0e6779",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code1').item.json.sessionId }}"
      },
      "id": "514e5541-c9dc-4718-a6b1-babc20591c9e",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1000,
        180
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "699ac522-e809-4d2e-97da-3a495ef57b09",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2800,
        1820
      ]
    },
    {
      "parameters": {},
      "id": "775c7c85-8969-424f-a5ad-5f1eddaf92b5",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2800,
        2080
      ]
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "timeMin": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"query\"][\"start\"] }}",
        "timeMax": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"query\"][\"end\"] }}",
        "options": {}
      },
      "id": "8efc1dd1-7ac8-4c63-9696-2baf28dc1453",
      "name": "Disponibilidade",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -1820,
        1900
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "start": "={{ $('Switch4').item.json.query.start }}",
        "end": "={{ $('Switch4').item.json.query.end }}",
        "additionalFields": {
          "attendees": [
            "={{ $('Switch4').item.json.query.email }}"
          ],
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $('Switch4').item.json.Remotejid }}",
          "summary": "={{ $('Execute Workflow Trigger').item.json.query.nome }}"
        }
      },
      "id": "b51f2aee-0a0d-42a4-a9af-a1550a1681d4",
      "name": "Marca",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -1320,
        1900
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "options": {
          "query": "={{ $json.query.email }}"
        }
      },
      "id": "e2813a87-dce0-4917-9b9a-1fa59b891d66",
      "name": "Já tem um evento",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -2280,
        1840
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "eventId": "={{ $item(\"0\").$node[\"Verifica evento\"].json[\"id\"] }}",
        "options": {}
      },
      "id": "900e242c-7209-4d06-b71d-c8769bd80d41",
      "name": "Google Calendar1",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -2060,
        2080
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "eventId": "={{ $item(\"0\").$node[\"Verifica evento1\"].json[\"id\"] }}",
        "useDefaultReminders": false,
        "updateFields": {
          "end": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"query\"][\"end\"] }}",
          "sendUpdates": "all",
          "start": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"query\"][\"start\"] }}"
        }
      },
      "id": "1ed9b314-4f6b-4e66-bec1-6e1e23375f35",
      "name": "Google Calendar3",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -1500,
        2260
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "returnAll": true,
        "options": {
          "query": "={{ $item(\"0\").$node[\"Switch4\"].json[\"query\"][\"email\"] }}"
        }
      },
      "id": "54225053-312c-4ca8-8e0e-70d23b454040",
      "name": "Verifica evento",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -2280,
        2080
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "returnAll": true,
        "options": {
          "query": "={{ $item(\"0\").$node[\"Switch4\"].json[\"query\"][\"email\"] }}"
        }
      },
      "id": "a1274481-1857-45af-ba99-e8ce93649b51",
      "name": "Verifica evento1",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -1700,
        2260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "be5649a9-7624-4621-bd2d-84c25577c0ce",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e99bfb44-1e96-47e3-94ce-37ab45de1f65",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2100,
        2280
      ]
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "timeMin": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"query\"][\"start\"] }}",
        "timeMax": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"query\"][\"end\"] }}",
        "options": {}
      },
      "id": "e42f5ae9-6c7e-44c9-9969-64faa41001e5",
      "name": "Disponibilidade1",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.1,
      "position": [
        -2300,
        2280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86ff282a-3ede-4417-98c1-0d10858bc5dc",
              "name": "response",
              "value": "=Você já tem uma reunião agendada para o dia: {{(() => { \n    const data = new Date($json.start.dateTime);\n    const opcoes = { day: '2-digit', month: 'long', hour: '2-digit', minute: '2-digit' };\n    return `dia ${data.toLocaleDateString('pt-BR', opcoes).replace(' ', ' de ').replace(',', ' às')}`;\n})()}} gostaria de reagendar? ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bdf5678a-b92d-4fbd-9077-66e899b45897",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1800,
        1740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d192ed0-aebd-404e-8339-daab0d29651f",
              "leftValue": "={{ $item(\"0\").$node[\"Já tem um evento\"].json[\"attendees\"][\"0\"][\"email\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "347a6fe3-6935-474f-81f3-6cd51762aa81",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2080,
        1840
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f842ffa-cd8f-40ab-a0a7-40dc173357a7",
              "name": "response",
              "value": "Informe o usuário que o agendamento foi cancelado e que estará sempre à disposição para um novo agendamento.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fe91cf29-795b-4629-8a3e-39d2f709fbf7",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1860,
        2080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "04c6ca35-7572-4699-bcb7-bbf2f2a6e6a4",
              "name": "response",
              "value": "horário não disponivel, peça outro horário",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "770afca1-90c4-427e-baea-3928f52fb4dd",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1320,
        2060
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"Evento\"] }}",
                    "rightValue": "agendamento",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "agendamento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7a57e8e8-5227-4cde-8d58-7b447cd55a17",
                    "leftValue": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"Evento\"] }}",
                    "rightValue": "cancelamento",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "cancelamento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d788021f-29ab-41f2-b355-2b18963d30f2",
                    "leftValue": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"Evento\"] }}",
                    "rightValue": "reagendamento",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reagendamento"
            }
          ]
        },
        "options": {}
      },
      "id": "198b4690-8791-4f56-a790-57a057d92b59",
      "name": "Switch4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2540,
        2080
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 800.6667333432747,
        "width": 2503.09595343677,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2880,
        1720
      ],
      "typeVersion": 1,
      "id": "6747a436-63d3-454f-bdd8-0fc79afdd81b",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "be5649a9-7624-4621-bd2d-84c25577c0ce",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8d551ea4-c566-412f-b190-e65cad21a8ba",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1620,
        1900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f842ffa-cd8f-40ab-a0a7-40dc173357a7",
              "name": "response",
              "value": "=sua reunião foi reagendada para a data:{{(() => { \n    const data = new Date($json.start.dateTime);\n    const opcoes = { day: '2-digit', month: 'long', hour: '2-digit', minute: '2-digit' };\n    return `dia ${data.toLocaleDateString('pt-BR', opcoes).replace(' ', ' de ').replace(',', ' às')}`;\n})()}} o link da reunião é: {{ $json.hangoutLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a39086bf-3ef8-4c2f-a4c7-8b908f8508b5",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1320,
        2260
      ]
    },
    {
      "parameters": {
        "name": "criar_reuniao",
        "description": "=Chame esta ferramenta após o usuário informar nome e email e data do agendamento. \n\nNa variável \"nome\", você vai preencher o nome do usuário e na variavel \"email\" você vai preencher com email do usuário\n\nA data do agendamento você vai transformar para seguinte formato, exemplo: 2024-10-18T14:30:00-03:00 e vai preencher a variavel \"start\"\n\nEm seguida você vai inserir 50 minutos a mais depois no horario de agendamento e na variavel \"end\" você vai prencher com o horario no mesmo formato da variavel start",
        "workflowId": {
          "__rl": true,
          "value": "6zYrwzO9AI8ZeyZg",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "Evento",
              "stringValue": "agendamento"
            },
            {
              "name": "Remotejid",
              "stringValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"nome\": \"nome do usuario\",\n    \"email\": \"email do usuario\",\n    \"start\": \"data hora do inicio da reunião\",\n    \"end\": \"data hora do fim da reunião\"\n}"
      },
      "id": "6621dc50-ff16-4104-b958-61effc07da16",
      "name": "criar_reuniao",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -840,
        1780
      ]
    },
    {
      "parameters": {
        "name": "cancelar_reuniao",
        "description": "=Chame esta ferramenta após o usuário informar que quer cancelar a reunião, colete o email e nome\n\nNa variável \"nome\", você vai preencher o nome do usuário e na variavel \"email\" você vai preencher com email do usuário",
        "workflowId": {
          "__rl": true,
          "value": "6zYrwzO9AI8ZeyZg",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "Evento",
              "stringValue": "cancelamento"
            },
            {
              "name": "Remotejid",
              "stringValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"nome\": \"nome do usuario\",\n    \"email\": \"email do usuario\"\n}"
      },
      "id": "b3f672b1-9a8b-443b-b25b-9af0694a509a",
      "name": "cancelar_reuniao",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -540,
        1780
      ]
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the information about prices and andress that you can check to answer user questions."
      },
      "id": "b3098a87-2476-4eb5-91cf-601e44fddec4",
      "name": "buscar_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        140,
        1740
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "eebe91e6939e2a1e9fe9320cfc3bee68ddf9a2b7fe353f94c2228212f3a30e97@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Reuniões Terapeutas"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $json.timestamp }}"
        }
      },
      "id": "f814d7a0-63db-47de-87f6-484cc7737dda",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.2,
      "position": [
        -2600,
        2980
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "USCjQuhdpfS3Y8zw",
          "name": "Google Calendar Koch"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806d2106-d234-428e-a909-db00044fc342",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(0, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "aab42f56-d82f-434d-8319-00e3c2c690f3",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(5, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2140,
        3160
      ],
      "id": "e22350c6-5826-4954-b329-d172451b9169",
      "name": "5 Minutos antes",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806d2106-d234-428e-a909-db00044fc342",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(115, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "aab42f56-d82f-434d-8319-00e3c2c690f3",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(120, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2140,
        2900
      ],
      "id": "0689cf1d-0480-44cc-907c-b2ab55832b6d",
      "name": "2 Hora antes",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5427ed1f-2dd2-4f7c-b7f4-9b13cd780bc7",
              "leftValue": "={{ $json.kind }}",
              "rightValue": "calendar#event",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1940,
        2900
      ],
      "id": "12052d24-c0e8-4e10-94b4-657f84277057",
      "name": "If7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5427ed1f-2dd2-4f7c-b7f4-9b13cd780bc7",
              "leftValue": "={{ $json.kind }}",
              "rightValue": "calendar#event",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1940,
        3160
      ],
      "id": "ba29b379-e26e-4fa6-a88c-cdd2dbe2b560",
      "name": "If8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a5af6299-68f1-4d3a-b2a7-c2ed65aa4ae6",
              "name": "remoteJid",
              "value": "={{ $('Loop Over Items4').item.json.description }}",
              "type": "string"
            },
            {
              "id": "fc721c8e-bfd6-4364-9c30-b0038118856f",
              "name": "Tempo",
              "value": "Crie uma mensagem avisando que falta 2 horas para a reunião ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1700,
        2880
      ],
      "id": "9bbdefc7-a409-4f9e-8315-ce50df95d24e",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields5').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Você foi acionado pois vai avisar quanto tempo falta para a reunião, diga apenas o tempo que falta e se precisa de algo antes da reunião, sem dicas de uso ou informações extras, exemplo: falta 2 horas para nossa reunião, precisando de qualquer coisa só falara comigo! "
        }
      },
      "id": "09cb6acf-a8ff-4b70-bb8d-72f4fee99952",
      "name": "Atendente1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1360,
        2860
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionid }}",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1240,
        3040
      ],
      "id": "c9a8d9b2-2240-45b3-92f6-aba522e12f42",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields2').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Você foi acionado pois vai avisar quanto tempo falta para a reunião, diga apenas o tempo que falta e se precisa de algo antes da reunião, sem dicas de uso ou informações extras, exemplo: nosso time já está entrando na call"
        }
      },
      "id": "2e1f5930-b957-47c4-ae33-7243b4cf51e3",
      "name": "Atendente2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1360,
        3160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c930cacf-b5ee-4120-a192-d68715d71d57",
              "name": "remoteJid",
              "value": "={{ $('Google Calendar').item.json.description }}",
              "type": "string"
            },
            {
              "id": "e7775c3f-04e5-4b6f-9695-dad8654b7ff8",
              "name": "Tempo",
              "value": "Crie uma mensagem avisando que falta 5 minutos para a reunião ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1740,
        3140
      ],
      "id": "7ea83995-328f-49fc-a723-e56728d42511",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -960,
        3020
      ],
      "id": "929eab66-6b8f-4d72-bd61-541bc82e059e",
      "name": "Evolution API7"
    },
    {
      "parameters": {
        "content": "",
        "height": 980,
        "width": 2302.828484039364,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2860,
        2580
      ],
      "typeVersion": 1,
      "id": "2b256330-d843-4aca-a256-c85e2d9a61f9",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# AVISO REUNIÃO CHEGANDO",
        "height": 80,
        "width": 551.2183277924504,
        "color": 5
      },
      "id": "e125d756-b85b-4937-91a4-2b873e360853",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2840,
        2620
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "d0dfdba7-6d15-427a-8d90-b0fe5b5792a0",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2820,
        2980
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1220,
        3160
      ],
      "id": "184ed42d-1405-4e6c-a996-ba02638d30d5",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ca9d7362-c381-4e72-9d39-be06703a4b3d",
      "name": "Loop Over Items4",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2380,
        2980
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -800,
        3180
      ],
      "id": "3f9cbdcd-0f15-485a-8dc0-3f0f82bebfed",
      "name": "Wait",
      "webhookId": "1652a979-d426-42ae-8458-da1ee045bfb4"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3680,
        1600
      ],
      "id": "9da56223-8721-4c5f-b4f4-db27b735b3f9",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3480,
        1440
      ],
      "id": "d06c5bca-1dce-4965-8462-b46e3e414008",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3360,
        1540
      ],
      "id": "d56d122a-8bbe-4da5-b9b6-2658b9496d0e",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3120,
        1820
      ],
      "id": "b258d155-c745-465a-bb9e-2760fd308e26",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 1100,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2040,
        1080
      ],
      "typeVersion": 1,
      "id": "1350c88b-551d-495c-87fd-5f2a1a9fa3c4",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2940,
        1080
      ],
      "typeVersion": 1,
      "id": "de3d788d-eb99-467c-9ed4-95aee6ae5f77",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\nconst sessionid1 = $input.item.json.data;  // Do nó \"Gerar sessionID\"\nconst sessionid2 = $input.item.json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3100,
        1380
      ],
      "id": "b415d47c-02c6-4f07-a932-3457cab21671",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -3860,
        1440
      ],
      "id": "a8b29605-c5a8-40df-9ecb-dce19975a3fd",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "17677579-2711-47bc-b5d5-40da7cc5d9e2",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2740,
        1540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "add218f5-bd23-4ff1-94cc-aaa4f7064aa2",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2880,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8a44fba4-5b67-4ae8-9ebe-a810db6ef2b8",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2440,
        1540
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "8b1c7932-79f8-4f37-95c0-7515eab11568",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1560
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "e8c0f9b9-a7fa-439a-b3af-b8a0623d39eb",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1420
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "c2ddaa12-69f0-419d-b7f0-8facee1c26b0",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2920,
        1300
      ]
    },
    {
      "parameters": {
        "content": "# Mensagem Picotada",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "f0416f59-e197-4e23-b8ad-2aca5a08024b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1680,
        1120
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Resumo curto da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "dc02f6e4-c6b4-4f98-8c3d-43e42403dbf7",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2580,
        1540
      ],
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eb74bb93-f44b-4ecf-930c-dbf9876cc43d",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1340,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}",
        "tail": true
      },
      "id": "c56ddb8e-146e-46b2-b92a-8165d91da327",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1100
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "5a8247d2-9064-4680-ae5a-38406d8a6a73",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1260
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b8c830b5-afc7-4c30-9010-b5516366e88a",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1520,
        1340
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "adb39967-4944-4023-b0bf-d40104b4fc3f",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1840,
        1340
      ],
      "webhookId": "7508fa49-bc87-45fc-bc55-e92f0d00664a"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "c65ea917-d80d-472a-bf68-1250ecd1c661",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2000,
        1340
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "3744339f-7b61-43c8-b168-bc9f12c9ea8c",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1680,
        1340
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3220,
        1220
      ],
      "id": "cf16e639-9af6-4624-b94f-d069af3c5ba7",
      "name": "Get Dados",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "telefone",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}{{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage.text }}",
              "type": "string"
            },
            {
              "id": "de1388b1-a6e4-42df-a6a5-7e9b4594f97d",
              "name": "body.event",
              "value": "={{ $('Webhook EVO').item.json.body.event }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3351382f-649f-4724-805b-4ab0f579e2f1",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4020,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.name",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.apikey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.server_url",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8bc3db2e-4449-4ba6-adc1-9a8eb90ef472",
      "name": "dados_para_atendimento_humano1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4800,
        1440
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "cd1e1f7f-3fd8-4fbf-84a6-fcf5723351b4",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4260,
        1540
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "01feb98c-ffe7-45a6-aaef-edbf5b5e9a49",
      "name": "Switch6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4620,
        1440
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 4320000
      },
      "id": "668617ac-66ed-4559-82c3-7df6ddf1c69d",
      "name": "PARA IA",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4420,
        1380
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_block",
        "options": {}
      },
      "id": "8a36257a-96bf-4d22-a695-5a66d4ee3070",
      "name": "Verificar Atendimento",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4420,
        1540
      ],
      "credentials": {
        "redis": {
          "id": "u1jG5ursvsFIpRjx",
          "name": "Redis IAN8N"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory1\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "7da430de-54d2-46a5-8c70-28043169af95",
      "name": "Mensagem Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1120,
        1320
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "3b7525a6-4e8f-49e4-a059-f876842c4d2e",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2540,
        1340
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "cfbb7968-daad-4f9c-8685-862cee779b83",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2360,
        1340
      ],
      "credentials": {
        "openAiApi": {
          "id": "WMaJXYscPReJYH1g",
          "name": "OpenAi Koch"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para Atendimento Humano",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "5f46e2af-de3a-4ba7-931f-96c5f8115383",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4860,
        1280
      ]
    },
    {
      "parameters": {
        "content": "# Filtro de menagem",
        "height": 80,
        "width": 356,
        "color": 5
      },
      "id": "6918a8f5-54a2-498c-b5ff-2eb06e1405cc",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2920,
        1100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f88db340-bcc9-407f-bb37-1ee193c81ec2",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2700,
        1340
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU",
          "mode": "list",
          "cachedResultName": "PP lista 2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1295001948,
          "mode": "list",
          "cachedResultName": "WA-Download Group Phone Numbers",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit#gid=1295001948"
        },
        "combineFilters": "OR",
        "options": {
          "returnFirstMatch": false
        }
      },
      "id": "d5f71629-cddd-41bf-adaa-73c3688dfab8",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2580,
        3940
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU",
          "mode": "list",
          "cachedResultName": "PP lista 2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1295001948,
          "mode": "list",
          "cachedResultName": "WA-Download Group Phone Numbers",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit#gid=1295001948"
        }
      },
      "id": "964cc85e-a869-4257-9d6b-49e4c029b328",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -740,
        3900
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "9a872782-690d-4e8f-b6cd-957818f14757",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2380,
        3940
      ],
      "webhookId": "78f1c2c3-6305-4095-9a10-04987b76a7b8"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{(() => {\n  const url = $('Google Sheets').item.json.link_test_whatsapp; // URL completa\n  const match = url.match(/phone=(\\d+)/); // Extrai o número de celular após \"phone=\"\n  if (match) {\n    const phoneNumber = match[1].replace('9', ''); // Remove apenas o primeiro \"9\" encontrado\n    return phoneNumber; // Retorna o número processado\n  }\n  return null; // Retorna null se não encontrar o padrão\n})()}}@s.whatsapp.net\n",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1060,
        4220
      ],
      "id": "80ce276c-16de-485c-9da7-d04138f38233",
      "name": "Postgres Chat Memory2"
    },
    {
      "parameters": {
        "content": "",
        "height": 820,
        "width": 2303,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2860,
        3640
      ],
      "typeVersion": 1,
      "id": "b78949c4-06a3-4016-96ab-590fdce32629",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "# CAPTAÇÃO DE CLIENTES",
        "height": 80,
        "width": 551.2183277924504,
        "color": 5
      },
      "id": "a776f07b-67e8-4287-9fd4-8a2f59cee8df",
      "name": "Sticky Note30",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2800,
        3660
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "*/20 10-17 * * 1-5"
            }
          ]
        }
      },
      "id": "4c077619-3839-4625-9df0-133ee46c5902",
      "name": "Schedule Trigger2",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2800,
        3940
      ]
    },
    {
      "parameters": {
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -940,
        3900
      ],
      "id": "aceb180b-ca28-4046-8bf8-6f46e19f2d76",
      "name": "Evolution API3",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "drana"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        360,
        1420
      ],
      "id": "3d629b3a-e8ad-45f1-a032-973cff377b02",
      "name": "ListChats-Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        880,
        1440
      ],
      "id": "8b7cf670-062b-4a86-bc0f-f4c1eaf2213b",
      "name": "ListMessages-Supabase2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1140,
        1440
      ],
      "id": "36774c57-a6f6-46c2-a8ea-2e5a114222fc",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate2').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        1440
      ],
      "id": "cd54bd75-fa5c-43ae-979c-80cba20605b5",
      "name": "Code6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        600,
        1420
      ],
      "id": "27d46810-f67a-4e9f-bc6e-b79aedb907c8",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Você é um agente resumidor de casos dos clientes, você analisa a conversa entre o agente e o cliente e cria um resumo do problema que ele está enfrentando de forma bem detalhada somente do problema do cliente e preferencia pela data da sessão, não precisa de informações sobre as respostas do agente para o cliente, e gera o resultado sem dicas de uso ou informações extras \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1620,
        1420
      ],
      "id": "bfd31092-77e1-4a48-b28d-4dea88ede7d3",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1580,
        1600
      ],
      "id": "37438b80-5f49-48ba-bcbc-7922e72128d1",
      "name": "OpenAI Chat Model6"
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 2200,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        1300
      ],
      "typeVersion": 1,
      "id": "eddc5bf7-5442-4c18-b5b8-dcd0256f5c24",
      "name": "Sticky Note47"
    },
    {
      "parameters": {
        "content": "# AVISAR NOVO LEAD NO GRUPO",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "92ae8b75-2287-4b17-98db-a9c7a9e1fa8b",
      "name": "Sticky Note51",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        1320
      ]
    },
    {
      "parameters": {
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        100,
        1420
      ],
      "id": "2b94c1e3-ef0e-4bfa-84dc-bd843ce419f5",
      "name": "Evolution API4",
      "credentials": {
        "evolutionApi": {
          "id": "TXhIzR3whfXb8Uft",
          "name": "Evolution Ecomtools"
        }
      }
    },
    {
      "parameters": {
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1960,
        1420
      ],
      "id": "90281d2c-2668-4ac8-aaac-70c78c98a7ce",
      "name": "Evolution API8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e41bbd-c264-4a36-b76e-cef79392855b",
              "leftValue": "={{ $json.body.data.key.remoteJid }}",
              "rightValue": "553199905686@s.whatsapp.net",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5060,
        1480
      ],
      "id": "83237b44-7809-4143-b105-2037115ef1da",
      "name": "If2"
    },
    {
      "parameters": {
        "name": "reagendar_reuniao",
        "description": "=Após o usuário informar que quer reagendar e colete o nome, email e nova data Chame esta tool\n\nNa variável \"nome\", você vai preencher o nome do usuário e na variavel \"email\" você vai preencher com email do usuário\n\nA data do agendamento você vai transformar para seguinte formato, exemplo: 2024-10-18T14:30:00-03:00 e vai preencher a variavel \"start\"\n\nEm seguida você vai inserir 50 minutos a mais depois no horário de agendamento e na variavel \"end\" você vai prencher com o horario no mesmo formato da variavel start",
        "workflowId": {
          "__rl": true,
          "value": "6zYrwzO9AI8ZeyZg",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "Evento",
              "stringValue": "reagendamento"
            },
            {
              "name": "Remotejid",
              "stringValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"nome\": \"nome do usuario\",\n    \"email\": \"email do usuario\",\n    \"start\": \"data hora do inicio da reunião\",\n    \"end\": \"data hora do fim da reunião\"\n}"
      },
      "id": "1e877b04-a796-45df-97dd-50a665e3fbbf",
      "name": "reagendar_reuniao",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -700,
        1780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86ff282a-3ede-4417-98c1-0d10858bc5dc",
              "name": "response",
              "value": "=Agendamento concluído para a data {{(() => { \n    const data = new Date($json.start.dateTime);\n    const opcoes = { day: '2-digit', month: 'long', hour: '2-digit', minute: '2-digit' };\n    return `dia ${data.toLocaleDateString('pt-BR', opcoes).replace(' ', ' de ').replace(',', ' às')}`;\n})()}}\no link da reunião é: {{ $json.hangoutLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "24d75b9a-d322-4c0f-995a-0ecfcf8643c7",
      "name": "Edit Fields10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1060,
        1900
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Calendar').item.json.description }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1520,
        3140
      ],
      "id": "a3ba49c0-e83f-48a5-b7d4-3bba64d0bc46",
      "name": "Supabase4",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Loop Over Items4').item.json.description }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1520,
        2880
      ],
      "id": "ffa06d91-3962-4ad7-b214-6b0ce74894c0",
      "name": "Supabase3",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields2').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Crie uma mensagem que vai ser enviada no WhatsApp, abaixo vou te mandar o nome completo da pessoa e um exemplo de mensagem, mas quero que chame a pessoa somente pelo primeiro nome, me de a resposta pronta para ser enviada sem dicas de uso ou informações extras, somente o resultado, pois será enviada via automação  \n\nMande somente o primeiro nome\n\nMensagem: Olá, {{ $('Google Sheets').item.json.socios }} tudo bem?  \n\nCaso não tenha um nome \nmande: olá, tudo bem é da empresa {{ $json.razao_social }}"
        }
      },
      "id": "aab3a4ed-eaa3-4d8c-af20-15eb45651bc6",
      "name": "Atendente3",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1300,
        3900
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1220,
        4260
      ],
      "id": "9c94cce8-b38b-4696-ae8c-d7228a93c8c3",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Sheets').item.json['Phone Number \t\t\t'].replace('+', '') }}@s.whatsapp.net\n"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2160,
        3940
      ],
      "id": "fe83f948-d94e-4f14-8048-6e26b3ae988d",
      "name": "Supabase5",
      "alwaysOutputData": true,
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1960,
        3940
      ],
      "id": "915fd667-3df5-489a-bf22-d1bed9f9e49d",
      "name": "If9"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -1760,
        4060
      ],
      "id": "3167f4e1-bcc9-4f68-bf83-4e248ac206fe",
      "name": "Gerar sessionID1"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Google Sheets').item.json['Phone Number \t\t\t'] }}@s.whatsapp.net"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1620,
        4060
      ],
      "id": "d3422d47-5389-44d0-8d95-ab81dc8c6be6",
      "name": "Supabase6",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\nconst sessionid1 = $input.item.json.data;  // Do nó \"Gerar sessionID\"\nconst sessionid2 = $input.item.json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1500,
        3900
      ],
      "id": "429d1438-7a5d-4a2e-aa4e-c1b86d1d0011",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Sheets').item.json['Phone Number \t\t\t'].replace('+', '') }}@s.whatsapp.net\n"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1660,
        3900
      ],
      "id": "41c29013-7c76-48c3-891f-aa758213a212",
      "name": "Get Dados1",
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "dados_cliente",
          "mode": "list",
          "cachedResultName": "dados_cliente"
        },
        "where": {
          "values": [
            {
              "column": "sessionid",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3680,
        1440
      ],
      "id": "95e12b11-5dc3-476d-902f-6f63436964e4",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "dados_cliente",
          "mode": "list",
          "cachedResultName": "dados_cliente"
        },
        "where": {
          "values": [
            {
              "column": "telefone",
              "value": "={{ $json.telefone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3280,
        1380
      ],
      "id": "5f640400-3c03-46ed-81b2-79b9a0ee7191",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "dados_cliente",
          "mode": "list",
          "cachedResultName": "dados_cliente"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sessionid": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}",
            "created_at": "={{ $json.data }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "sessionid",
              "displayName": "sessionid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3220,
        1560
      ],
      "id": "b2955192-db5b-424e-a33d-fc8bc6b3b7af",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chats",
          "mode": "list",
          "cachedResultName": "chats"
        },
        "where": {
          "values": [
            {
              "column": "phone",
              "value": "={{ $('Variáveis').item.json.telefone }}"
            },
            {
              "column": "app",
              "value": "terapeuta"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -140,
        80
      ],
      "id": "3178159b-1ae0-4413-9d8d-35601e27d103",
      "name": "Busca Telefone1",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chats",
          "mode": "list",
          "cachedResultName": "chats"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Variáveis').item.json.telefone }}",
            "created_at": "={{ $now}}",
            "conversation_id": "={{ $('Code1').item.json.sessionId }}",
            "app": "terapeuta"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "app",
              "displayName": "app",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        460,
        20
      ],
      "id": "518cdfef-100b-4d02-9f69-f7e94f57831c",
      "name": "Adiciona Chat",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chats",
          "mode": "list",
          "cachedResultName": "chats"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Variáveis').item.json.telefone }}",
            "created_at": "={{ $now}}",
            "conversation_id": "={{ $('Code1').item.json.sessionId }}",
            "app": "terapeuta"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "app",
              "displayName": "app",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        420,
        220
      ],
      "id": "05c7a52a-2fc8-4878-b6b9-bd125c80a3d1",
      "name": "Atualiza Chat",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chat_messages",
          "mode": "list",
          "cachedResultName": "chat_messages"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Variáveis').item.json.telefone }}",
            "created_at": "={{ $now}}",
            "conversation_id": "={{ $('Code1').item.json.sessionId }}",
            "bot_message": "={{ $('Atendente').item.json.output }}",
            "user_message": "={{ $('Mensagem Completa').item.json.mensagem_completa }}",
            "message_type": "{{ $('dados_para_atendimento_humano1').item.json.message.content_type }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "bot_message",
              "displayName": "bot_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "message_type",
              "displayName": "message_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        840,
        180
      ],
      "id": "bdc0fc2c-3936-48cc-ae68-bb5260fd56da",
      "name": "Cria Histórico",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "7cdbcac8-af3f-452d-a540-f8e2a8ccf8d2",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -340,
        1980
      ],
      "credentials": {
        "supabaseApi": {
          "id": "l2D3Atp5yaeMaJhV",
          "name": "Supabase IAN8N"
        }
      }
    },
    {
      "parameters": {
        "tableName": "documents",
        "options": {
          "collection": {
            "values": {
              "useCollection": true,
              "collectionName": "match_documents",
              "collectionTableName": "documents"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.1,
      "position": [
        60,
        1920
      ],
      "id": "6532175f-b2b2-44e0-9b08-63081625e990",
      "name": "Postgres PGVector Store",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chats",
          "mode": "list",
          "cachedResultName": "chats"
        },
        "where": {
          "values": [
            {
              "column": "app",
              "value": "terapeuta"
            },
            {
              "column": "updated_at",
              "condition": ">=",
              "value": "={{ $now.plus(5,'minutes') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -5260,
        1920
      ],
      "id": "a6f8bc04-46ea-4562-9233-a14de1caf2f2",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chat_messages",
          "mode": "list",
          "cachedResultName": "chat_messages"
        },
        "where": {
          "values": [
            {
              "column": "phone",
              "value": "={{ $json.phone }}"
            },
            {
              "column": "created_at",
              "condition": ">=",
              "value": "={{ $now.plus(5,'minutes') }}"
            },
            {
              "column": "active",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4740,
        1940
      ],
      "id": "1988d27c-4ceb-44ab-80eb-8cf085fccabe",
      "name": "Postgres4",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chat_messages",
          "mode": "list",
          "cachedResultName": "chat_messages"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "phone": "={{ $('Aggregate1').item.json.conversas.last().phone }}",
            "conversation_id": "={{ $('Aggregate1').item.json.conversas.last().phone }}",
            "message_type": "={{ $('Aggregate1').item.json.conversas.last().message_type }}",
            "bot_message": "={{ $json.text }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "bot_message",
              "displayName": "bot_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_type",
              "displayName": "message_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3680,
        1920
      ],
      "id": "16a41cb7-06fa-459f-ab64-56c23d87d638",
      "name": "Postgres5",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "chat_messages",
          "mode": "list",
          "cachedResultName": "chat_messages"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": false,
            "phone": "={{ $('Aggregate1')?.item?.json?.conversas?.last()?.phone }}"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "bot_message",
              "displayName": "bot_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message_type",
              "displayName": "message_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3340,
        2060
      ],
      "id": "a05566a7-8a81-423c-b758-8a71c787fa45",
      "name": "Postgres6",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "id",
              "value": "=metadata->>file_id=like.*{{ $json.file_id }}*"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4920,
        2560
      ],
      "id": "1e5dc266-a2d4-4ecd-8542-61feb859dae4",
      "name": "Postgres7",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "documents",
        "embeddingBatchSize": 1000,
        "options": {
          "collection": {
            "values": {
              "useCollection": true,
              "collectionName": "match_documents",
              "collectionTableName": "match_documents"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.1,
      "position": [
        -3460,
        2580
      ],
      "id": "20653e05-c9c5-4a79-8318-c04a62c29add",
      "name": "Postgres PGVector Store1",
      "credentials": {
        "postgres": {
          "id": "ieD9qxSZM6jwtrkV",
          "name": "Postgres IAN8N"
        }
      }
    }
  ],
  "pinData": {
    "Webhook EVO": [
      {
        "json": {
          "headers": {
            "host": "webhook.brenoluiz.com",
            "user-agent": "axios/1.7.9",
            "content-length": "906",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "webhook.brenoluiz.com",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "89e8b17d6de0",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "BRENO AULAS",
            "data": {
              "key": {
                "remoteJid": "553199905686@s.whatsapp.net",
                "fromMe": false,
                "id": "3A6E179B5178567DFA1F"
              },
              "pushName": "Breno Luiz",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "Marca uma reunia amanhã às 16 horas ?",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "dZQS417PWwReLg==",
                    "senderTimestamp": "1741877761",
                    "recipientKeyHash": "3t25dg28mYATBg==",
                    "recipientTimestamp": "1741817493"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "r9nqG/TqI0GYvRW/UuDaLaVMnGHQUSn5P2jqK7BI4aA="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1741967004,
              "instanceId": "242f6dff-e9ac-4ec6-a1c6-aa2a046fcc20",
              "source": "ios"
            },
            "destination": "https://webhook.brenoluiz.com/webhook/pterapeuta2",
            "date_time": "2025-03-14T12:43:24.475Z",
            "sender": "553192894714@s.whatsapp.net",
            "server_url": "https://api.brenoluiz.com",
            "apikey": "948D4743B0BA-422C-AD4B-9BEF366F6FB3"
          },
          "webhookUrl": "https://webhook.brenoluiz.com/webhook/pterapeuta2",
          "executionMode": "production"
        }
      }
    ],
    "Execute Workflow Trigger": [
      {
        "json": {
          "query": {
            "nome": "Breno",
            "email": "brendanedlem@gmail.com",
            "start": "2025-03-14T15:00:00-03:00",
            "end": "2025-03-14T15:50:00-03:00"
          },
          "Evento": "agendamento",
          "Remotejid": "553199905686@s.whatsapp.net"
        }
      }
    ]
  },
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Postgres PGVector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Postgres PGVector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Postgres PGVector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Postgres PGVector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Postgres PGVector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        []
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca Telefone1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook EVO": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cria Histórico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adiciona Chat",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase": {
      "main": [
        []
      ]
    },
    "ListMessages-Supabase": {
      "main": [
        []
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DisableMessage-Supabase": {
      "main": [
        []
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "SetConfig",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        []
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone": {
      "main": [
        []
      ]
    },
    "Adiciona CHAT supabase": {
      "main": [
        []
      ]
    },
    "Atualiza CHAT Supabase": {
      "main": [
        []
      ]
    },
    "Menos que 240 Caracteres": {
      "main": [
        [],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retorna ID do arquivo": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta linhas antigas do documento": {
      "main": [
        []
      ]
    },
    "Cria Histórico Supabase": {
      "main": [
        []
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Disponibilidade": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Marca": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Já tem um evento": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar1": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica evento": {
      "main": [
        [
          {
            "node": "Google Calendar1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verifica evento1": {
      "main": [
        [
          {
            "node": "Google Calendar3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Verifica evento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Disponibilidade1": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Disponibilidade",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "Já tem um evento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verifica evento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Disponibilidade1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Marca",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "criar_reuniao": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cancelar_reuniao": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "buscar_documentos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5 Minutos antes": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2 Hora antes": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Atendente1",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Atendente2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Google Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Atendente2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "2 Hora antes",
            "type": "main",
            "index": 0
          },
          {
            "node": "5 Minutos antes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        []
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        []
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "Mensagem Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados": {
      "main": [
        []
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_para_atendimento_humano1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "PARA IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Atendimento": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Completa": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "Atendente3",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase2": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "dados_para_atendimento_humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reagendar_reuniao": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "Atendente2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase3": {
      "main": [
        [
          {
            "node": "Atendente1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Get Dados1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID1": {
      "main": [
        [
          {
            "node": "Supabase6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase6": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Atendente3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona Chat": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza Chat": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        []
      ]
    },
    "Postgres PGVector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetConfig": {
      "main": [
        [
          {
            "node": "Evolution API6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "Retorna ID do arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres PGVector Store1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Sao_Paulo",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "620408b9-f389-4c2d-915d-7926c07c96a8",
  "meta": {
    "instanceId": "c74a6837c472fe8345877f3a2bf4797b43eaf306298fc8f8704c28050b05f4d3"
  },
  "id": "6DgPCJwlqWjdLbgR",
  "tags": []
}