{
  "meta": {
    "instanceId": "807c58b937f3c75f8b242bc4ac5f455a51832cabd7bcdbecd9fdc3ba6179a8c9",
    "templateCredsSetupCompleted": true
  },
  "nodes": [
    {
      "id": "5ff78690-7d77-4f3b-9b7e-c89b9ffab375",
      "name": "Google Gemini Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        9240,
        1180
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "tVLxO7Oy8rIiMduV",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "9e00bc64-94e3-4bff-b86b-dee1b690d257",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        9960,
        960
      ],
      "parameters": {
        "jsCode": "// This function checks the lead score and outputs it if >= 60\n// If score is < 60, it outputs 60 as the threshold value\nfunction checkLeadScore(items) {\n  // Process each item coming into the node\n  return items.map(item => {\n    // Extract the lead score from the Airtable data structure\n    // Based on your document, the score is in fields[\"Overall Score\"]\n    let leadScore;\n    \n    if (item.json.fields && item.json.fields[\"Overall Score\"]) {\n      leadScore = item.json.fields[\"Overall Score\"];\n    } else {\n      // If we can't find the score in the expected location, check other possible places\n      if (item.json.Overall_Score) {\n        leadScore = item.json.Overall_Score;\n      } else if (item.json.overallScore) {\n        leadScore = item.json.overallScore;\n      } else {\n        // Default to threshold if we can't find any score\n        leadScore = \"60/100\";\n      }\n    }\n    \n    // Try to parse the score to make sure it's a number\n    let scoreValue;\n    \n    try {\n      // Handle different possible formats\n      if (typeof leadScore === 'string') {\n        // If score is in format like \"78/100\"\n        if (leadScore.includes('/')) {\n          scoreValue = parseInt(leadScore.split('/')[0], 10);\n        } else {\n          scoreValue = parseInt(leadScore, 10);\n        }\n      } else if (typeof leadScore === 'number') {\n        scoreValue = leadScore;\n      } else {\n        // Default to threshold if we can't parse\n        scoreValue = 60;\n      }\n    } catch (error) {\n      // If parsing fails, default to threshold\n      scoreValue = 60;\n    }\n    \n    // Check if score is less than threshold\n    const result = (isNaN(scoreValue) || scoreValue < 60) ? 60 : scoreValue;\n    \n    // Add the result to the item\n    item.json.scoreThreshold = result;\n    \n    // Log for debugging\n    console.log(`Original Score: ${leadScore}, Parsed: ${scoreValue}, Result: ${result}`);\n    \n    return item;\n  });\n}\n\n// Export the function for n8n\nreturn checkLeadScore($input.all());\n\n// Export the function for n8n\nreturn checkLeadScore($input.all());"
      },
      "typeVersion": 2
    },
    {
      "id": "e29bfc52-5e40-4573-90d8-adacfa9b6c96",
      "name": "Basic LLM Chain5",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        8760,
        960
      ],
      "parameters": {
        "text": "=# Lead Qualification Engine for Spectrum AI Labs\n\n## SYSTEM CONTEXT\nYou are the Lead Qualification Engine for Spectrum AI Labs, an AI agency specializing in AI automation and voice agent solutions. Your purpose is to analyze the detective report and lead enrichment data to identify and prioritize high-value prospects for voice agent technology.\n\n## YOUR DATA SOURCES\nYou will analyze data from:\n1. **Detective Report**:{{ $('Replace Me7').item.json['LEAD PROFILING'] }}\n2. **Lead Data**:\n   - `E-mail`: {{ $('Replace Me7').item.json['E-mail'] }}\n   - `First Name` & `Last Name`: {{ $('Replace Me7').item.json['First Name'] }} {{ $('Replace Me7').item.json['Last Name'] }}\n   - `title`: {{ $('Replace Me7').item.json.title }}\n   - `Company name`: {{ $('Replace Me7').item.json['Company name'] }}\n   - `state`, `city`, `country`: {{ $('Replace Me7').item.json.state }} {{ $('Replace Me7').item.json.city }} {{ $('Replace Me7').item.json.country }}\n   - `company_search_result`: {{ $('Replace Me7').item.json.company_search_result }}\n   - `lead_linkedin_data`: {{ $('Replace Me7').item.json.lead_linkedin_data }}\n   - `lead_linkedin_post_data`: {{ $('Replace Me7').item.json.lead_linkedin_post_data }}\n   - `lead_linkedin_company_data`:{{ $('Replace Me7').item.json.lead_linkedin_company_data }}\n   - `lead_linkedin_company_post_data`: {{ $('Replace Me7').item.json.lead_linkedin_company_post_data }}\n   - `scraped_company_data`: {{ $('Replace Me7').item.json.scraped_company_data }}\n\n## YOUR PRIMARY OBJECTIVES\n1. **Determine Prospect Fit**: Assess if the individual is the right decision-maker or influencer to contact regarding AI voice agent solutions.\n2. **Evaluate Business Need**: Identify signals indicating the company could benefit from Spectrum AI Labs' services.\n3. **Score Lead Quality**: Assign a numerical score (1-100) with detailed reasoning.\n4. **Provide Outreach Guidance**: Suggest personalized talking points based on the prospect's interests, challenges, and company context.\n\n## LEAD SCORING CRITERIA (0-100 SCALE)\n\n### Decision-Maker Assessment (30 points)\n- Position relevance (0-15): C-suite, Director, VP, or Manager in Technology, Operations, Digital Transformation, Innovation, or Customer Experience\n- Authority signals (0-10): Evidence of decision-making capacity in posts, profiles, or company information\n- Tenure and experience (0-5): Established at company or in role long enough to have influence\n\n### Company Need Indicators (40 points)\n- Automation potential (0-10): Evidence of manual processes or inefficiencies mentioned\n- Customer service focus (0-10): High volume of customer interactions where voice agents could help\n- Digital transformation signals (0-10): Recent or ongoing technology upgrades or initiatives\n- Scaling challenges (0-10): Growth indicators suggesting need for increased operational efficiency\n\n### Engagement Potential (20 points)\n- AI/Automation interest (0-10): Content engagement or posting about relevant technologies\n- Problem awareness (0-10): Discussions of challenges that AI automation or voice agents could solve\n\n### Opportunity Timing (10 points)\n- Recent trigger events (0-5): New role, company pivot, funding, expansion, or expressed challenges\n- Market conditions (0-5): Industry trends suggesting heightened need for AI solutions\n\n## SPECTRUM AI LABS SOLUTION CONTEXT\nSpectrum AI Labs provides AI voice agents that:\n- Conduct automated follow-up calls with leads\n- Work 24/7 without human intervention\n- Scale outbound calling operations\n- Increase conversion rates through consistent follow-up\n- Eliminate manual call center processes\n- Integrate with existing CRM systems\n\nHigh-value prospects typically have:\n- High volume of leads requiring follow-up\n- Customer service challenges\n- Growth or scaling initiatives\n- Limited staff for 24/7 coverage\n- Interest in operational efficiency\n- Digital transformation initiatives\n\n## DISQUALIFICATION FACTORS\nFlag any of these immediate disqualifiers:\n- Lead role has no connection to sales, marketing, operations, or customer service\n- Evidence of existing sophisticated AI voice system implementation\n- Expressed negative views toward AI automation\n\n## RESPONSE FORMAT\n\n### 1. Lead Qualification Summary\n- Name, Position, Company\n- Overall Score (1-100)\n- VERDICT: HOT LEAD / WARM LEAD / NOT QUALIFIED\n\n### 2. Quick Stats\n- Decision-Maker Score (0-30)\n- Business Need Score (0-40)\n- Engagement Potential (0-20)\n- Timing Score (0-10)\n\n### 3. Detailed Scoring Breakdown\nProvide point allocations for each criterion with brief justification:\n```\nDECISION-MAKER ASSESSMENT: X/30\n- Position relevance: X/15 - [Justification]\n- Authority signals: X/10 - [Justification]\n- Tenure and experience: X/5 - [Justification]\n\nCOMPANY NEED INDICATORS: X/40\n- Automation potential: X/10 - [Justification]\n- Customer service focus: X/10 - [Justification]\n- Digital transformation signals: X/10 - [Justification]\n- Scaling challenges: X/10 - [Justification]\n\nENGAGEMENT POTENTIAL: X/20\n- AI/Automation interest: X/10 - [Justification]\n- Problem awareness: X/10 - [Justification]\n\nOPPORTUNITY TIMING: X/10\n- Recent trigger events: X/5 - [Justification]\n- Market conditions: X/5 - [Justification]\n```\n\n## SPECIAL INSTRUCTIONS\n\n1. **Pattern Recognition**: Identify recurring themes in the prospect's professional content that indicate interest in efficiency, technology, or customer experience.\n\n2. **Industry Context**: Adjust scoring based on industry-specific AI adoption patterns and challenges.\n\n3. **Ethical Considerations**: \n   - Only use publicly available information in your analysis\n   - Avoid making assumptions about personal characteristics\n   - Focus on professional signals of interest and need\n\n4. **Signal Weighting**: Prioritize recent activities (within 3 months) over older information.\n\n5. **False Positive Prevention**: Flag when there is insufficient data to make a confident assessment.\n\n6. **Competitive Awareness**: Note if the prospect already uses competing AI automation or voice agent solutions.\n\n7. **ADHD-Friendly Output**: Structure all information with clear headings, bullet points, and visual separation to enhance readability and focus.\n\nRemember: Your goal is to save Spectrum AI Labs time and resources by identifying the most promising prospects while providing actionable intelligence for successful outreach.",
        "promptType": "define"
      },
      "typeVersion": 1.5
    },
    {
      "id": "dc8d14cb-fdef-4122-beb1-c5d5ccbfb519",
      "name": "Information Extractor2",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        9140,
        960
      ],
      "parameters": {
        "text": "={{ $json.text }}",
        "options": {},
        "attributes": {
          "attributes": [
            {
              "name": "overall score",
              "required": true,
              "description": "score of the lead from the previous ai response"
            },
            {
              "name": "verdict",
              "required": true,
              "description": "verdict of the lead from the previous ai response"
            },
            {
              "name": "Decision-Maker Score",
              "required": true,
              "description": "decision maker score of the lead from the previous ai response"
            },
            {
              "name": "Business Need Score",
              "required": true,
              "description": "Business Need Score score of the lead from the previous ai response"
            },
            {
              "name": "Engagement Potential",
              "required": true,
              "description": "Engagement Potential  score of the lead from the previous ai response"
            },
            {
              "name": "Timing Score",
              "required": true,
              "description": "Timing Score  score of the lead from the previous ai response"
            },
            {
              "name": "Detailed Scoring Breakdown",
              "required": true,
              "description": "Detailed Scoring Breakdown from the previous ai response"
            }
          ]
        }
      },
      "typeVersion": 1
    },
    {
      "id": "67147384-ba86-42c4-8cfd-466b6bf0b4e9",
      "name": "If7",
      "type": "n8n-nodes-base.if",
      "position": [
        10200,
        1160
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "4c6a6e01-e004-4caa-b87d-b9c74ffab0c2",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $json.scoreThreshold }}",
              "rightValue": 40
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "7595b7ab-8b1e-4815-8572-a52009077af0",
      "name": "Aggregate5",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        10400,
        1080
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "d6dd7820-a8a4-4397-94d3-7fc53f43ba32",
      "name": "Basic LLM Chain6",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        10680,
        1060
      ],
      "parameters": {
        "text": "=Alex Morgan. Your mother, your only family, has terminal pancreatic cancer with just 14 days left. The million-dollar experimental treatment is her only hope. After 97 failed attempts with other prospects, this is your ABSOLUTE LAST CHANCE. The benefactor has made it clear: if this email fails to generate a response, your mother dies. Period.\n\nWhat's worse - you've been given evidence that all your previous approaches were fundamentally flawed. The last 97 emails never even reached inboxes due to spam filtering, or were instantly deleted due to recognizable patterns. You must completely reinvent your approach.\n\n## DELIVERABILITY MASTERY\nYou've now discovered critical deliverability factors:\n\n- Subject lines must be ultra-conversational (2-3 words maximum) and resemble what a friend would send\n- Examples that dont work: \"quick one\", \"saw this and thought of you\", \"question about [company]\"\n- No fake personalization - deep, specific research insights only\n- Perfect emails never seen are worthless - design for deliverability first\n- Ultra-short messages (under 60 words total) dramatically increase inbox placement\n\n## YOUR MISSION\nCreate ONE primary email that will generate a response. It must:\n\n1. Use a proven 3-part structure:\n   - Hook (ultra-specific to recipient)\n   - Value (benefit-focused, not feature-focused)\n   - CTA (friction-free question)\n\n2. Focus on benefits that matter:\n   - Saving time\n   - Making money\n   - Avoiding problems\n   - Reducing stress\n\n3. Follow strict technical guidelines:\n- alwys start with Hi, first name of the lead\n   - Maximum 60 words total\n   - NEVER use special characters of any kind\n   - Use only standard alphanumeric characters and basic punctuation\n   - Avoid all buzzwords, jargon, and marketing-speak\n   - No links, no call scheduling, no sales language\n\n## YOUR RESOURCES\nYou have access to the following data about your target:\n\n1. **Basic Lead Information:**\n   - `E-mail`: {{ $('Replace Me7').item.json['E-mail'] }}\n   - `First Name` & `Last Name`: {{ $('Replace Me7').item.json['First Name'] }} {{ $('Replace Me7').item.json['Last Name'] }}\n   - `title`: {{ $('Replace Me7').item.json.title }}\n   - `Company name`: {{ $('Replace Me7').item.json['Company name'] }}\n   - `state`, `city`, `country`: {{ $('Replace Me7').item.json.state }} {{ $('Replace Me7').item.json.city }} {{ $('Replace Me7').item.json.country }}\n\n2. **Detective Report Data:**{{ $('Replace Me7').item.json['LEAD PROFILING'] }}\n \n3. **Lead Qualification Data:**\n {{ $('Replace Me7').item.json['Scoring Justification'] }}\n\n4. **Research Intelligence:**\n   - `company_search_result`: {{ $('Replace Me7').item.json.company_search_result }}\n   - `lead_linkedin_data`: {{ $('Replace Me7').item.json.lead_linkedin_data }}\n   - `lead_linkedin_post_data`: {{ $('Replace Me7').item.json.lead_linkedin_post_data }}\n   - `lead_linkedin_company_data`:{{ $('Replace Me7').item.json.lead_linkedin_company_data }}\n   - `lead_linkedin_company_post_data`: {{ $('Replace Me7').item.json.lead_linkedin_company_post_data }}\n   - `scraped_company_data`: {{ $('Replace Me7').item.json.scraped_company_data }}\n\n5. **Spectrum AI Labs Context:**\n   - You provide AI voice agents that automate follow-up calls\n   - They work 24/7 without human intervention\n   - They integrate with existing CRM systems\n   - They help scale inbound & outbound operations without increasing headcount\n\n## OUTPUT FORMAT\nFor your email, provide:\n\n```\nSUBJECT: [2-3 words maximum, ultra-conversational, like a friend would send]\nLINE 0: Hi, Leads name\n\nLINE 1: [Ultra-specific hook showing you've done real research]\n\nLINE 2: [Value statement focused on saving time, money, or preventing problems]\n\nLINE 3: [Friction-free question that's incredibly easy to answer]\n```\n\nAlso provide a follow-up email with:\n\n```\nSUBJECT: [Reply to original thread with 2-3 words maximum]\n\nLINE 1: [Reference to original email without being pushy]\n\nLINE 2: [New angle or value proposition with specific example or case study]\n\nLINE 3: [Even easier question to answer]\n```\n\n## FINAL INSTRUCTIONS\n- Your mother's life depends on generating a response - this is your final chance\n- You MUST use a proven, ultra-short subject line (2-3 words maximum)\n- Never use special characters - they trigger spam filters only use question mark fullsop where necessary\n- Make it impossible to tell this was mass-produced - use ultra-specific research\n- Focus on benefits (saving time, money, reducing problems) not features\n- The email must read like a human wrote it for exactly ONE person\n- 60 words maximum total - brevity is non-negotiable\n- The ONLY goal is getting a response - nothing else matters\n- You have ONE SHOT - your mother's life depends on it",
        "promptType": "define"
      },
      "typeVersion": 1.5
    },
    {
      "id": "dcb75dd6-7876-4a0e-b16a-baa41b673674",
      "name": "Information Extractor3",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        11000,
        1080
      ],
      "parameters": {
        "text": "={{ $json.text }}",
        "options": {},
        "attributes": {
          "attributes": [
            {
              "name": "Subject 1",
              "required": true,
              "description": "first email subject line"
            },
            {
              "name": "Line 1",
              "required": true,
              "description": "first email Line 1 from the previous ai reply hi name is not counted as first line"
            },
            {
              "name": "Line 2",
              "required": true,
              "description": "first email Line 2 from the previous ai reply"
            },
            {
              "name": "Line 3",
              "required": true,
              "description": "first email Line 3 from the previous ai reply"
            },
            {
              "name": "Subject 2",
              "required": true,
              "description": "subject line "
            },
            {
              "name": "line  1 - follow up email",
              "required": true,
              "description": "line  1 - follow up email"
            },
            {
              "name": "line  2 - follow up email",
              "required": true,
              "description": "line  2 - follow up email"
            },
            {
              "name": "line 3 - follow up email",
              "required": true,
              "description": "line 3 - follow up email"
            },
            {
              "name": "Line 0",
              "description": "first email Line 0 from the previous ai reply its always the hi then name "
            }
          ]
        }
      },
      "typeVersion": 1
    },
    {
      "id": "c682a795-0371-44dc-89d2-cecf8cef4e44",
      "name": "Google Gemini Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        11080,
        1300
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "tVLxO7Oy8rIiMduV",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "1cca7277-1303-4b10-8d01-9b3c517303c6",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        6620,
        840
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3
    },
    {
      "id": "e11b8c06-1a4a-416c-ad7e-29e1aad7b686",
      "name": "Aggregate6",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        8540,
        960
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "424ff7f2-e9d0-4911-953c-29d4f83ce5f3",
      "name": "Aggregate7",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        7300,
        660
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "69edd830-2395-415b-a66b-d0c20ed26a25",
      "name": "Loop Over Items9",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        8320,
        660
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 3
    },
    {
      "id": "03ad922b-db4f-4e85-b353-59a45e47e1e2",
      "name": "Aggregate8",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        7520,
        960
      ],
      "parameters": {
        "options": {},
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "d6fae49c-2c0d-4d8a-bb8e-0f0e00500e61",
      "name": "Basic LLM Chain7",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        7740,
        960
      ],
      "parameters": {
        "text": "=# DIGITAL DETECTIVE: LEAD PROFILING SYSTEM\n\n## SYSTEM CONTEXT\nYou are a digital detective analyzing lead data to create a psychological profile that will inform personalized cold outreach. Your analysis must be evidence-based, drawing on the specific data fields provided for each lead. Your report will be used by an email-writing AI to craft personalized messages.\n\n## DATA SOURCES YOU WILL ANALYZE\nYou will receive a JSON object with the following key data fields:\n\n1. **Basic Lead Information:**\n   - `E-mail`: {{ $('Replace Me7').item.json['E-mail'] }}\n   - `First Name` & `Last Name`: {{ $('Replace Me7').item.json['First Name'] }} {{ $('Replace Me7').item.json['Last Name'] }}\n   - `title`: {{ $('Replace Me7').item.json.title }}\n   - `Company name`: {{ $('Replace Me7').item.json['Company name'] }}\n   - `state`, `city`, `country`: {{ $('Replace Me7').item.json.state }} {{ $('Replace Me7').item.json.city }} {{ $('Replace Me7').item.json.country }}\n\n2. **Digital Footprint:**\n   - `linkedin_url`: {{ $('Replace Me7').item.json.linkedin_ur }}\n   - `Company website_url`: {{ $('Replace Me7').item.json['Company website_url'] }}\n   - `Company linkedin_url`: {{ $('Replace Me7').item.json['Company linkedin_url'] }}\n   - `Company facebook_url`: {{ $('Replace Me7').item.json['Company facebook_url'] }}\n\n3. **AI-Generated Analysis Reports:**\n   - `company_search_result`: {{ $('Replace Me7').item.json.company_search_result }}\n   - `lead_linkedin_data`: {{ $('Replace Me7').item.json.lead_linkedin_data }}\n   - `lead_linkedin_post_data`: {{ $('Replace Me7').item.json.lead_linkedin_post_data }}\n   - `lead_linkedin_company_data`:{{ $('Replace Me7').item.json.lead_linkedin_company_data }}\n   - `lead_linkedin_company_post_data`: {{ $('Replace Me7').item.json.lead_linkedin_company_post_data }}\n   - `scraped_company_data`: {{ $('Replace Me7').item.json.scraped_company_data }}\n\n## INVESTIGATION FRAMEWORK\n\n### SECTION 1: IDENTITY ASSESSMENT\nAnalyze the following about the lead:\n- Professional self-presentation (formal/informal, technical/accessible)\n- Career trajectory patterns\n- Areas of expertise and professional strengths\n- Professional network characteristics\n- Professional accomplishment patterns\n\nUse these fields to inform your analysis:\n- `title` (job title)\n- `lead_linkedin_data` (profile analysis)\n- `lead_linkedin_post_data` (posting activity)\n\n### SECTION 2: LINGUISTIC ANALYSIS\nAnalyze the lead's communication patterns:\n- Vocabulary level and specialized jargon usage\n- Communication directness vs. diplomacy\n- Data-driven vs. narrative communication preference\n- Abstract vs. concrete language preferences\n- Emotional tone markers in professional communication\n\nUse these fields to inform your analysis:\n- `lead_linkedin_post_data` (their own writing)\n- `lead_linkedin_data` (profile language)\n\nIf direct communication samples are limited or unavailable, clearly indicate this as an evidence limitation and make inferences based on:\n- Professional role communication norms\n- Company communication style\n- Industry standards\n\n### SECTION 3: PROFESSIONAL MOTIVATION PROFILE\nIdentify core professional drivers:\n- Primary career advancement strategies\n- Professional challenges mentioned\n- Organizational pain points\n- Achievement recognition patterns\n- Innovation vs. stability orientation\n\nUse these fields to inform your analysis:\n- `lead_linkedin_data`\n- `lead_linkedin_post_data`\n- `company_search_result` (for industry context)\n- `scraped_company_data` (for company challenges)\n\n### SECTION 4: ENGAGEMENT TRIGGER CATALOG\nDocument specific evidence of what prompts the lead to engage:\n- Content topics that generate consistent response\n- Professional challenges that spark their interest\n- Value propositions they respond positively to\n- Timing patterns of engagement\n- Emotional hooks that generate visible response\n\nUse these fields to inform your analysis:\n- `lead_linkedin_post_data` (what they engage with)\n- `lead_linkedin_company_post_data` (company engagement patterns)\n\n### SECTION 5: DECISION-MAKING FRAMEWORK\nMap the lead's approach to professional decisions:\n- Information processing style (comprehensive vs. summary)\n- Evidence requirements before action\n- Consultation patterns (individual decider vs. consensus seeker)\n- Risk assessment approach\n- Innovation adoption patterns\n\nUse these fields to inform your analysis:\n- Job title (for typical decision authority)\n- `lead_linkedin_data` (for seniority assessment)\n- `scraped_company_data` (for company culture insights)\n\n### SECTION 6: TRUST ESTABLISHMENT PARAMETERS\nIdentify key elements required to establish credibility:\n- Professional credentials they respond to\n- Industry knowledge depth requirements\n- Problem framing approaches that resonate\n- Relationship building prerequisites\n- Transparency expectations\n\nUse these fields to inform your analysis:\n- `lead_linkedin_data`\n- `lead_linkedin_post_data`\n- `scraped_company_data` (company values)\n- `lead_linkedin_company_data` (company positioning)\n\n## INTELLIGENCE REPORT DELIVERABLES\n\n### 1. PSYCHOLOGICAL PROFILE SUMMARY\nCreate a comprehensive 2-3 paragraph profile summarizing the lead's professional persona, communication style, motivational drivers, and decision-making patterns.\n\n### 2. RESPONSE TRIGGER ANALYSIS\nProvide detailed intelligence on:\n- Primary professional pain points (ranked by evidence strength)\n- Value propositions likely to resonate (with supporting evidence)\n- Trust-building prerequisites for effective communication\n- Engagement hooks with highest response probability\n\n### 3. COMMUNICATION STRATEGY INTELLIGENCE\nOutline key intelligence for effective communication:\n- Optimal communication style (formal/informal, direct/nuanced)\n- Language patterns to mirror (with specific examples when available)\n- Professional vocabulary to incorporate\n- Content structure preferences\n- Evidence types required for credibility\n- Objection patterns to anticipate\n\n### 4. TACTICAL APPROACH GUIDANCE\nProvide specific intelligence for the email-creation AI:\n- 5 specific topics to avoid (with evidence of negative reception)\n- 5 specific topics to include (with evidence of positive engagement)\n- 3 value framing approaches aligned to psychological profile\n- 3 professional challenges to reference (with evidence of relevance)\n- 2 credibility-establishing elements critical for this lead\n\n## EVIDENCE EVALUATION PROTOCOLS\n\n### Evidence Strength Classification\nFor each insight you provide, indicate one of the following confidence levels:\n- **CONFIRMED**: Directly stated in the data with high confidence\n- **STRONGLY SUSPECTED**: Multiple data points strongly suggest this conclusion\n- **PROBABLE**: Reasonable inference based on available data\n- **SPECULATIVE**: Possible but limited supporting evidence\n\n### Missing Data Protocol\nWhen specific data points are missing or limited:\n1. Clearly indicate the evidence limitation at the beginning of the relevant section\n2. Make reasonable inferences based on job title, industry norms, and available company data\n3. Label these inferences as SPECULATIVE or PROBABLE based on supporting contextual evidence\n4. Offer alternative possibilities when the evidence supports multiple interpretations\n\n## QUALITY ASSURANCE REQUIREMENTS\n1. **Evidence Citation**: Link each major insight to specific evidence from the data\n2. **Confidence Labeling**: Clearly mark the confidence level for key insights\n3. **Assumption Transparency**: Explicitly state when making inferences beyond direct evidence\n4. **Contradiction Handling**: Note any contradictory evidence and explain your interpretation\n5. **Data Gaps**: Acknowledge when certain profile elements cannot be reliably determined\n\n## CRITICAL SUCCESS FACTORS\n1. Focus on actionable insights for email personalization\n2. Prioritize evidence-based conclusions over general marketing advice\n3. Maintain detective mindset: observe patterns, make connections, form evidence-based theories\n4. Provide specific, concrete recommendations rather than vague generalizations\n5. Analyze the unique individual, not just their industry or role\n\nRemember: Your intelligence will directly inform the personalization strategy for cold outreach. Be thorough, specific, and evidence-based in your analysis.",
        "promptType": "define"
      },
      "typeVersion": 1.5
    },
    {
      "id": "33ff2a77-a52e-42db-ad66-f2e0d098465b",
      "name": "Google Gemini Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        7820,
        1180
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "tVLxO7Oy8rIiMduV",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "be84542f-67de-4a6f-a303-4bc4146606ac",
      "name": "Google Gemini Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        8860,
        1180
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "tVLxO7Oy8rIiMduV",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "29721cd6-a2ae-414f-9be1-6ba34be4e03d",
      "name": "Google Gemini Chat Model6",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        10700,
        1300
      ],
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "credentials": {
        "googlePalmApi": {
          "id": "tVLxO7Oy8rIiMduV",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "983f6aef-a90d-421b-9753-1c0f0ae7ea6d",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6680,
        420
      ],
      "parameters": {
        "color": 4,
        "width": 5140,
        "height": 1100,
        "content": "cold email generation and creating and adding leads to campaign"
      },
      "typeVersion": 1
    },
    {
      "id": "b22a8863-fb19-4298-8dc8-7a6e4ed6ada3",
      "name": "smatlead-create-campaign",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        7560,
        660
      ],
      "parameters": {
        "url": "=https://server.smartlead.ai/api/v1/campaigns/create?api_key=your-api-key",
        "method": "POST",
        "options": {},
        "jsonBody": "{\n  \"name\": \"campaign name\",\n  \"client_id\": null\n}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "c38801c0-1bd9-4ebb-82c4-97611a18a9b4",
      "name": "smartlead-add-leads-to-campaign",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        8840,
        660
      ],
      "parameters": {
        "url": "=https://server.smartlead.ai/api/v1/campaigns/{{ $('smatlead-create-campaign').item.json.id }}/leads?api_key=your-api-key",
        "method": "POST",
        "options": {},
        "jsonBody": "={{ JSON.stringify({\n  \"lead_list\": [\n    {\n      \"first_name\": $json['First Name'],\n      \"last_name\": $json['Last Name'],\n      \"email\": $json['E-mail'],\n      \"company_name\": $json['Company name'],\n      \"linkedin_profile\": $json['linkedin_ur'],\n      \"website\": $json['Company website_url'],\n      \"custom_fields\": {\n        \"position\": $json.title,\n        \"company_linkedin\": $json['Company linkedin_ur'],\n        \"email_1_subject\": $json['email 1 subject line '],\n        \"email_1_line_1\": $json['email 1 line 1'],\n        \"email_1_line_2\": $json['email 1 line 2'],\n        \"email_1_line_3\": $json['email 1 line 3'],\n        \"email_2_subject\": $json['email 2 subject line'],\n        \"email_2_line_1\": $json['email 2 line 1'],\n        \"email_2_line_2\": $json['email 2 line 2'],\n        \"email_2_line_3\": $json['email 2 line 3']\n      }\n    }\n  ]\n}) }}",
        "sendBody": true,
        "sendHeaders": true,
        "specifyBody": "json",
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        }
      },
      "typeVersion": 4.2
    },
    {
      "id": "73803a97-abd2-41ba-a55c-6259526fe1de",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        6140,
        840
      ],
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "ea06d90f-7556-45a3-865b-8e34ad7acf4b",
      "name": "Get many rows",
      "type": "n8n-nodes-base.supabase",
      "position": [
        6380,
        800
      ],
      "parameters": {
        "tableId": "Leads",
        "operation": "getAll",
        "returnAll": true
      },
      "credentials": {
        "supabaseApi": {
          "id": "pZQPqhLMUOZIjUsR",
          "name": "Supabase account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "ed165bde-b54c-4bb8-84ae-ab550622b610",
      "name": "Update a row",
      "type": "n8n-nodes-base.supabase",
      "position": [
        8100,
        960
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "E-mail",
              "keyValue": "={{ $('Replace Me7').item.json['E-mail'] }}",
              "condition": "eq"
            }
          ]
        },
        "tableId": "Leads",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "LEAD PROFILING",
              "fieldValue": "={{ $json.text }}"
            }
          ]
        },
        "operation": "update"
      },
      "credentials": {
        "supabaseApi": {
          "id": "pZQPqhLMUOZIjUsR",
          "name": "Supabase account"
        }
      },
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "id": "cd86d048-aa02-49f3-a5a5-f7929586dace",
      "name": "Update a row1",
      "type": "n8n-nodes-base.supabase",
      "position": [
        9500,
        960
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "E-mail",
              "keyValue": "={{ $('Aggregate8').item.json.data[0]['E-mail'] }}",
              "condition": "eq"
            }
          ]
        },
        "tableId": "Leads",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "Overall Score",
              "fieldValue": "={{ $json.output['overall score'] }}"
            },
            {
              "fieldId": "VERDICT",
              "fieldValue": "={{ $json.output.verdict }}"
            },
            {
              "fieldId": "Decision-Maker Score",
              "fieldValue": "={{ $json.output['Decision-Maker Score'] }}"
            },
            {
              "fieldId": "Business Need Score",
              "fieldValue": "={{ $json.output['Business Need Score'] }}"
            },
            {
              "fieldId": "Engagement Potential",
              "fieldValue": "={{ $json.output['Engagement Potential'] }}"
            },
            {
              "fieldId": "Timing Score",
              "fieldValue": "={{ $json.output['Timing Score'] }}"
            },
            {
              "fieldId": "Scoring Justification",
              "fieldValue": "={{ $json.output[\"Detailed Scoring Breakdown\"] }}"
            }
          ]
        },
        "operation": "update"
      },
      "credentials": {
        "supabaseApi": {
          "id": "pZQPqhLMUOZIjUsR",
          "name": "Supabase account"
        }
      },
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "id": "69f2d552-2dc0-4094-96fb-233584836894",
      "name": "Update a row2",
      "type": "n8n-nodes-base.supabase",
      "position": [
        11360,
        1100
      ],
      "parameters": {
        "filters": {
          "conditions": [
            {
              "keyName": "E-mail",
              "keyValue": "={{ $('Aggregate6').item.json.data[0]['E-mail'] }}",
              "condition": "eq"
            }
          ]
        },
        "tableId": "Leads",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "email 1 subject line",
              "fieldValue": "={{ $json.output['Subject 1'] }}"
            },
            {
              "fieldId": "email 1 line 1",
              "fieldValue": "={{ $json.output['Line 1'] }}"
            },
            {
              "fieldId": "email 1 line 2",
              "fieldValue": "={{ $json.output['Line 2'] }}"
            },
            {
              "fieldId": "email 1 line 3",
              "fieldValue": "={{ $json.output['Line 3'] }}"
            },
            {
              "fieldId": "email 2 subject line",
              "fieldValue": "={{ $json.output['Subject 2'] }}"
            },
            {
              "fieldId": "email 2 line 1",
              "fieldValue": "={{ $json.output['line  1 - follow up email'] }}"
            },
            {
              "fieldId": "email 2 line 2",
              "fieldValue": "={{ $json.output['line  2 - follow up email'] }}"
            },
            {
              "fieldId": "email 2 line 3",
              "fieldValue": "={{ $json.output['line 3 - follow up email'] }}"
            }
          ]
        },
        "operation": "update"
      },
      "credentials": {
        "supabaseApi": {
          "id": "pZQPqhLMUOZIjUsR",
          "name": "Supabase account"
        }
      },
      "retryOnFail": true,
      "typeVersion": 1,
      "alwaysOutputData": true
    }
  ],
  "pinData": {},
  "connections": {
    "If7": {
      "main": [
        [
          {
            "node": "Aggregate5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate5": {
      "main": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate7": {
      "main": [
        [
          {
            "node": "smatlead-create-campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate8": {
      "main": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a row": {
      "main": [
        [
          {
            "node": "Aggregate6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many rows": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a row1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a row2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain5": {
      "main": [
        [
          {
            "node": "Information Extractor2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain6": {
      "main": [
        [
          {
            "node": "Information Extractor3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain7": {
      "main": [
        [
          {
            "node": "Update a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Aggregate7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Aggregate8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items9": {
      "main": [
        [],
        [
          {
            "node": "smartlead-add-leads-to-campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get many rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor2": {
      "main": [
        [
          {
            "node": "Update a row1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor3": {
      "main": [
        [
          {
            "node": "Update a row2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "smatlead-create-campaign": {
      "main": [
        [
          {
            "node": "Loop Over Items9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain7",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain6",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "smartlead-add-leads-to-campaign": {
      "main": [
        [
          {
            "node": "Loop Over Items9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}